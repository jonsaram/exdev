<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dashboardCorPerformance">

	<cache />
	
	<!-- 매출액 순위, 영업이익별 순위 -->
    <select id="getSalesRanking" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.getSalesRanking */
        SELECT SP_CSTM_ID
              ,STORE_ID
              ,STORE_NM3
              ,AMOUNT
              ,ROUND(AMOUNT1) AS AMOUNT1
        FROM   (
                SELECT B.SP_CSTM_ID
                      ,B.STORE_ID
                      ,B.STORE_NM3
                      ,SUM(A.AMOUNT)         AS AMOUNT
                      ,SUM(A.AMOUNT)/1000000 AS AMOUNT1
                FROM   TBL_EXP_STORE_FINANCIAL A
                       JOIN TBL_EXP_STORE_INFO B
                         ON  1 = 1
                         AND A.SP_CSTM_ID = B.SP_CSTM_ID
                         AND A.STORE_ID   = B.STORE_ID
                WHERE  1 = 1
                AND    A.SP_CSTM_ID = #{sessionVo.spCstmId}
                AND    A.BRAND_ID   = #{brandId} 
                <if test=" !'ALL'.equals(subject) ">
                    AND    A.SUBJECT    = #{subject}
                </if>
                <if test=" !'ALL'.equals(region) ">
                    AND    B.REGION     = #{region}
                </if>
                <if test=" !'ALL'.equals(supervisor) ">
                    AND    B.SUPERVISOR    = #{supervisor}
                </if>
                AND    TO_DATE(A.YEAR||'-'||A.MONTH , 'YYYY-MM')  BETWEEN TO_DATE( #{startDate}, 'YYYY-MM') AND TO_DATE( #{endDate}, 'YYYY-MM') 
                GROUP BY B.SP_CSTM_ID
                        ,B.STORE_ID
                        ,B.STORE_NM3
                ORDER BY  SUM(A.AMOUNT) DESC
               )
        WHERE  1 = 1
    </select>

    <sql id="getSalesRanking_bak_body">
        SELECT ROW_NUMBER() OVER (ORDER BY AMOUNT DESC) AS RN
              ,SP_CSTM_ID
              ,REGION
              ,REGION_NM
              ,YEAR
              ,AMOUNT
              ,AMOUNT1
        FROM   (
                    SELECT B.SP_CSTM_ID
                          ,B.REGION
                          ,GET_CODE_NM('STORE_REGION', B.REGION) AS REGION_NM
                          ,A.YEAR
                          ,SUM(A.AMOUNT)           AS AMOUNT
                          ,SUM(A.AMOUNT)/100000000 AS AMOUNT1
                    FROM   TBL_EXP_STORE_FINANCIAL A
                           JOIN TBL_EXP_STORE_INFO B
                             ON  1 = 1
                             AND A.SP_CSTM_ID = B.SP_CSTM_ID
                             AND A.STORE_ID   = B.STORE_ID
                    WHERE  1 = 1
                    AND    A.SP_CSTM_ID = #{parm.spCstmId}
                    AND    A.YEAR       = #{parm.year}
                    GROUP BY B.SP_CSTM_ID
                            ,B.REGION
                            ,GET_CODE_NM('STORE_REGION', B.REGION)
                            ,A.YEAR
               )
        WHERE  1 = 1
    </sql>  

    <select id="getSalesRanking_bak" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.getSalesRanking */
        <include refid="getSalesRanking_bak_body"/>
        ORDER BY AMOUNT 
    </select>
    
    <select id="getSalesRanking_bak_totalCnt" resultType="Integer">
        /* dashboardCorPerformance.getSalesRanking_totalCnt  */
        <include refid="common.totalWrapStart"/>
        <include refid="getSalesRanking_bak_body"/>
        <include refid="common.totalWrapEnd"/>
    </select>
    
    <select id="getSalesRanking_bak_paging" resultType="java.util.HashMap">
        /* dashboardCorPerformance.getSalesRanking_paging  */
        <include refid="common.pagingWrapStart"/>
        <include refid="getSalesRanking_bak_body"/>
        ORDER BY AMOUNT
        <include refid="common.pagingWrapEnd"/>
    </select>
    
    <select id="getMonthAccrue" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.getMonthAccrue */
        WITH TABLE_FINANCIAL AS (
             SELECT    A.SP_CSTM_ID
                      ,A.BRAND_ID
                      ,A.YEAR
                      ,A.MONTH
                      ,A.SUBJECT_001
                      ,A.SUBJECT_003
                      ,A.SUBJECT_005
                      ,A.SUBJECT_010
                FROM   (
                        SELECT B.SP_CSTM_ID
                              ,B.BRAND_ID
                              ,B.YEAR
                              ,B.MONTH
                              ,SUM(DECODE(B.SUBJECT, 'SUBJECT_001', AMOUNT, 0)) AS SUBJECT_001 /*매출액*/
                              ,SUM(DECODE(B.SUBJECT, 'SUBJECT_003', AMOUNT, 0)) AS SUBJECT_003 /*매출총이익*/
                              ,SUM(DECODE(B.SUBJECT, 'SUBJECT_005', AMOUNT, 0)) AS SUBJECT_005 /*영업이익*/
                              ,SUM(DECODE(B.SUBJECT, 'SUBJECT_010', AMOUNT, 0)) AS SUBJECT_010 /*당기순이익 */  
                        FROM   TBL_EXP_STORE_INFO A
                               JOIN TBL_EXP_STORE_FINANCIAL B
                                   ON  1 = 1
                                   AND B.SUBJECT IN ('SUBJECT_001','SUBJECT_003','SUBJECT_010','SUBJECT_005')
                                   AND A.SP_CSTM_ID = B.SP_CSTM_ID
                                   AND A.STORE_ID   = B.STORE_ID
                                   AND TO_DATE( (B.YEAR||'-'||B.MONTH||'-01') , 'YYYY-MM-DD') BETWEEN TO_DATE(#{startYMD} , 'YYYY-MM-DD') AND TO_DATE( #{endYMD} , 'YYYY-MM-DD')
                        WHERE  1 = 1
                        AND    A.SP_CSTM_ID = #{sessionVo.spCstmId}
                        AND    A.BRAND_ID   = #{brandId} 
                        <if test=" !'ALL'.equals(region) and region != null and region != ''  ">
                            AND    A.REGION =  #{region} 
                        </if>
                        <if test=" !'ALL'.equals(store) and store != null and store != ''  ">
                            AND    A.STORE_ID = #{store} 
                        </if>
                        <if test=" !'ALL'.equals(supervisor) and supervisor != null and supervisor != ''  ">
                          AND    A.SUPERVISOR = #{supervisor}
                        </if>
                        GROUP BY  B.SP_CSTM_ID
                                 ,B.BRAND_ID
                                 ,B.YEAR
                                 ,B.MONTH
                ) A
                WHERE 1 = 1 
                ORDER BY A.SP_CSTM_ID
                         ,A.BRAND_ID
                         ,A.YEAR
                         ,A.MONTH
        )
       ,TABLE_YEAR_MONTH  AS (
                SELECT TO_CHAR(ADD_MONTHS(TRUNC(TO_DATE(#{startYMD}, 'YYYY-MM-DD'), 'MM'), LEVEL - 1), 'YYYY-MM')               AS YEAR_MONTH
                      ,SUBSTR(TO_CHAR(ADD_MONTHS(TRUNC(TO_DATE(#{startYMD}, 'YYYY-MM-DD'), 'MM'), LEVEL - 1), 'YYYY-MM'), 0, 4) AS YEAR
                      ,SUBSTR(TO_CHAR(ADD_MONTHS(TRUNC(TO_DATE(#{startYMD}, 'YYYY-MM-DD'), 'MM'), LEVEL - 1), 'YYYY-MM'), 6, 2) AS MONTH
                FROM  (
                       SELECT TO_DATE(#{startYMD}, 'YYYY-MM-DD') AS START_DATE, 
                              TO_DATE(#{endYMD}, 'YYYY-MM-DD') AS END_DATE
                       FROM DUAL
                      ) A
                CONNECT BY LEVEL <![CDATA[<=]]>  MONTHS_BETWEEN(TRUNC(A.END_DATE, 'MM'), TRUNC(A.START_DATE, 'MM')) + 1
        )
        SELECT TABLE_YEAR_MONTH.YEAR
              ,TABLE_YEAR_MONTH.MONTH
              ,NVL(TABLE_FINANCIAL.SUBJECT_001,0) AS SUBJECT_001 
              ,NVL(TABLE_FINANCIAL.SUBJECT_003,0) AS SUBJECT_003
              ,NVL(TABLE_FINANCIAL.SUBJECT_005,0) AS SUBJECT_005
              ,NVL(TABLE_FINANCIAL.SUBJECT_010,0) AS SUBJECT_010
        FROM   TABLE_YEAR_MONTH
               LEFT OUTER JOIN TABLE_FINANCIAL
                   ON  1 = 1
                   AND TABLE_YEAR_MONTH.YEAR = TABLE_FINANCIAL.YEAR
                   AND TABLE_YEAR_MONTH.MONTH = TABLE_FINANCIAL.MONTH
        ORDER BY TABLE_YEAR_MONTH.YEAR
               ,TABLE_YEAR_MONTH.MONTH
    </select>
    
    <select id="getMonthSales" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.getMonthSales */
        SELECT MONTH
              ,SUBJECT
              ,SUM(AMOUNT) AS AMOUNT
        FROM   TBL_EXP_STORE_FINANCIAL
        WHERE  1 = 1
        AND    SUBJECT IN ('SUBJECT_001','SUBJECT_003','SUBJECT_010','SUBJECT_005') 
        AND    SP_CSTM_ID = #{sessionVo.spCstmId}
        AND    YEAR = #{year}
        GROUP BY MONTH
                ,SUBJECT
        ORDER BY MONTH
                ,SUBJECT
    </select>
    
    <select id="SalesAndGoalSales" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.SalesAndGoalSales */
        WITH SALES_GOAL AS (
                SELECT SP_CSTM_ID, STORE_ID, YEAR, '01' AS MONTH, MONTH1  AS AMOUNT FROM   TBL_EXP_STORE_SALES_GOAL WHERE SP_CSTM_ID = #{spCstmId} UNION ALL
                SELECT SP_CSTM_ID, STORE_ID, YEAR, '02' AS MONTH, MONTH2  AS AMOUNT FROM   TBL_EXP_STORE_SALES_GOAL WHERE SP_CSTM_ID = #{spCstmId} UNION ALL
                SELECT SP_CSTM_ID, STORE_ID, YEAR, '03' AS MONTH, MONTH3  AS AMOUNT FROM   TBL_EXP_STORE_SALES_GOAL WHERE SP_CSTM_ID = #{spCstmId} UNION ALL
                SELECT SP_CSTM_ID, STORE_ID, YEAR, '04' AS MONTH, MONTH4  AS AMOUNT FROM   TBL_EXP_STORE_SALES_GOAL WHERE SP_CSTM_ID = #{spCstmId} UNION ALL
                SELECT SP_CSTM_ID, STORE_ID, YEAR, '05' AS MONTH, MONTH5  AS AMOUNT FROM   TBL_EXP_STORE_SALES_GOAL WHERE SP_CSTM_ID = #{spCstmId} UNION ALL
                SELECT SP_CSTM_ID, STORE_ID, YEAR, '06' AS MONTH, MONTH6  AS AMOUNT FROM   TBL_EXP_STORE_SALES_GOAL WHERE SP_CSTM_ID = #{spCstmId} UNION ALL
                SELECT SP_CSTM_ID, STORE_ID, YEAR, '07' AS MONTH, MONTH7  AS AMOUNT FROM   TBL_EXP_STORE_SALES_GOAL WHERE SP_CSTM_ID = #{spCstmId} UNION ALL
                SELECT SP_CSTM_ID, STORE_ID, YEAR, '08' AS MONTH, MONTH8  AS AMOUNT FROM   TBL_EXP_STORE_SALES_GOAL WHERE SP_CSTM_ID = #{spCstmId} UNION ALL
                SELECT SP_CSTM_ID, STORE_ID, YEAR, '09' AS MONTH, MONTH9  AS AMOUNT FROM   TBL_EXP_STORE_SALES_GOAL WHERE SP_CSTM_ID = #{spCstmId} UNION ALL
                SELECT SP_CSTM_ID, STORE_ID, YEAR, '10' AS MONTH, MONTH10 AS AMOUNT FROM   TBL_EXP_STORE_SALES_GOAL WHERE SP_CSTM_ID = #{spCstmId} UNION ALL
                SELECT SP_CSTM_ID, STORE_ID, YEAR, '11' AS MONTH, MONTH11 AS AMOUNT FROM   TBL_EXP_STORE_SALES_GOAL WHERE SP_CSTM_ID = #{spCstmId} UNION ALL
                SELECT SP_CSTM_ID, STORE_ID, YEAR, '12' AS MONTH, MONTH12 AS AMOUNT FROM   TBL_EXP_STORE_SALES_GOAL WHERE SP_CSTM_ID = #{spCstmId} 
                )
        SELECT A.SP_CSTM_ID
              ,A.STORE_ID
              ,C.STORE_NM3 
              ,SUM(A.AMOUNT)   AS AMOUNT
              ,SUM(B.AMOUNT)   AS AMOUNT_GOAL
        FROM   TBL_EXP_STORE_FINANCIAL A
               JOIN  SALES_GOAL B
                 ON  1 = 1
                 AND A.SP_CSTM_ID = B.SP_CSTM_ID
                 AND A.STORE_ID = B.STORE_ID
                 AND A.YEAR = B.YEAR
                 AND A.MONTH = B.MONTH
               JOIN TBL_EXP_STORE_INFO C
                 ON  1 = 1
                 AND A.SP_CSTM_ID = C.SP_CSTM_ID
                 AND A.STORE_ID   = C.STORE_ID  
        WHERE  1 = 1
        AND    A.SUBJECT = 'SUBJECT_001' 
        AND    A.SP_CSTM_ID = #{spCstmId}
        GROUP BY A.SP_CSTM_ID
                ,A.STORE_ID
                ,C.STORE_NM3
        ORDER BY A.SP_CSTM_ID
                ,A.STORE_ID
    </select>
            <select id="SalesAndGoalSalesChartList" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.SalesAndGoalSalesChartList */
        SELECT A.SP_CSTM_ID
              ,A.STORE_ID
              ,A.STORE_NM3
              ,SUM(A.GOAL_MONTH)  AS GOAL_MONTH
              ,SUM(A.SALES_MONTH) AS SALES_MONTH
        FROM   (
                SELECT A.SP_CSTM_ID
                      ,A.STORE_ID
                      ,B.STORE_NM3
                      ,A.YEAR
                      ,A.MONTH
                      ,A.YYYY_MM_DD
                      ,A.GOAL_MONTH
                      ,A.SALES_MONTH
                FROM   (
                        WITH STORE AS (
                                       SELECT  A.SP_CSTM_ID    
                                              ,A.STORE_ID      
                                              ,A.YEAR          
                                              ,NVL(A.MONTH1, 0) AS GOAL_MONTH1
                                              ,B.MONTH01        AS SALES_MONTH1
                                              ,NVL(A.MONTH2 ,0) AS GOAL_MONTH2
                                              ,B.MONTH02        AS SALES_MONTH2 
                                              ,NVL(A.MONTH3 ,0) AS GOAL_MONTH3
                                              ,B.MONTH03        AS SALES_MONTH3 
                                              ,NVL(A.MONTH4 ,0) AS GOAL_MONTH4
                                              ,B.MONTH04        AS SALES_MONTH4 
                                              ,NVL(A.MONTH5 ,0) AS GOAL_MONTH5
                                              ,B.MONTH05        AS SALES_MONTH5 
                                              ,NVL(A.MONTH6 ,0) AS GOAL_MONTH6
                                              ,B.MONTH06        AS SALES_MONTH6 
                                              ,NVL(A.MONTH7 ,0) AS GOAL_MONTH7
                                              ,B.MONTH07        AS SALES_MONTH7 
                                              ,NVL(A.MONTH8 ,0) AS GOAL_MONTH8
                                              ,B.MONTH08        AS SALES_MONTH8 
                                              ,NVL(A.MONTH9 ,0) AS GOAL_MONTH9
                                              ,B.MONTH09        AS SALES_MONTH9 
                                              ,NVL(A.MONTH10,0) AS GOAL_MONTH10
                                              ,B.MONTH10        AS SALES_MONTH10
                                              ,NVL(A.MONTH11,0) AS GOAL_MONTH11
                                              ,B.MONTH11        AS SALES_MONTH11
                                              ,NVL(A.MONTH12,0) AS GOAL_MONTH12
                                              ,B.MONTH12        AS SALES_MONTH12
                                       FROM   TBL_EXP_STORE_SALES_GOAL A
                                              JOIN (
                                                        /*=========================================================================================*/

                                                        SELECT  SP_CSTM_ID
                                                               ,STORE_ID
                                                               ,YEAR
                                                               ,SUM(MONTH01) AS MONTH01
                                                               ,SUM(MONTH02) AS MONTH02
                                                               ,SUM(MONTH03) AS MONTH03
                                                               ,SUM(MONTH04) AS MONTH04
                                                               ,SUM(MONTH05) AS MONTH05
                                                               ,SUM(MONTH06) AS MONTH06
                                                               ,SUM(MONTH07) AS MONTH07
                                                               ,SUM(MONTH08) AS MONTH08
                                                               ,SUM(MONTH09) AS MONTH09
                                                               ,SUM(MONTH10) AS MONTH10
                                                               ,SUM(MONTH11) AS MONTH11
                                                               ,SUM(MONTH12) AS MONTH12
                                                        FROM   (
                                                                        SELECT  A.SP_CSTM_ID
                                                                               ,A.STORE_ID
                                                                               ,A.YEAR
                                                                               ,A.MONTH
                                                                               ,CASE MONTH WHEN '01'  THEN SUM(A.NET_SALES)  ELSE 0 END AS MONTH01
                                                                               ,CASE MONTH WHEN '02'  THEN SUM(A.NET_SALES)  ELSE 0 END AS MONTH02
                                                                               ,CASE MONTH WHEN '03'  THEN SUM(A.NET_SALES)  ELSE 0 END AS MONTH03
                                                                               ,CASE MONTH WHEN '04'  THEN SUM(A.NET_SALES)  ELSE 0 END AS MONTH04
                                                                               ,CASE MONTH WHEN '05'  THEN SUM(A.NET_SALES)  ELSE 0 END AS MONTH05
                                                                               ,CASE MONTH WHEN '06'  THEN SUM(A.NET_SALES)  ELSE 0 END AS MONTH06
                                                                               ,CASE MONTH WHEN '07'  THEN SUM(A.NET_SALES)  ELSE 0 END AS MONTH07
                                                                               ,CASE MONTH WHEN '08'  THEN SUM(A.NET_SALES)  ELSE 0 END AS MONTH08
                                                                               ,CASE MONTH WHEN '09'  THEN SUM(A.NET_SALES)  ELSE 0 END AS MONTH09
                                                                               ,CASE MONTH WHEN '10'  THEN SUM(A.NET_SALES)  ELSE 0 END AS MONTH10
                                                                               ,CASE MONTH WHEN '11'  THEN SUM(A.NET_SALES)  ELSE 0 END AS MONTH11
                                                                               ,CASE MONTH WHEN '12'  THEN SUM(A.NET_SALES)  ELSE 0 END AS MONTH12
                                                                        FROM   TBL_EXP_STORE_SALES A
                                                                        WHERE  1 = 1
                                                                        AND    A.SP_CSTM_ID  = #{sessionVo.spCstmId}
                                                                        AND    A.YEAR        = #{startYear}
                                                                        GROUP BY A.SP_CSTM_ID
                                                                                ,A.STORE_ID
                                                                                ,A.YEAR
                                                                                ,A.MONTH
                                                        ) A
                                                        GROUP BY A.SP_CSTM_ID
                                                                ,A.STORE_ID
                                                                ,A.YEAR
                                                       /*=========================================================================================*/
                                                   ) B
                                                ON  1 = 1
                                                AND A.SP_CSTM_ID = B.SP_CSTM_ID
                                                AND A.STORE_ID   = B.STORE_ID
                                                AND A.YEAR       = B.YEAR
                                       WHERE  1 = 1
                                       AND    A.SP_CSTM_ID = #{sessionVo.spCstmId}
                                       AND    A.YEAR  = #{startYear}
                                       ORDER BY A.SP_CSTM_ID    
                                               ,A.STORE_ID      
                                               ,A.YEAR 
                        )
                        SELECT A.SP_CSTM_ID
                              ,A.STORE_ID
                              ,TO_CHAR(A.YEAR)        AS YEAR
                              ,TO_CHAR(A.MONTH, '09') AS MONTH
                              ,TO_DATE(TO_CHAR(A.YEAR)||'-'||TO_CHAR(A.MONTH, '09')||'-'||'01', 'YYYY-MM-DD') AS YYYY_MM_DD
                              ,A.GOAL_MONTH
                              ,A.SALES_MONTH
                        FROM   (
                                    SELECT STORE.SP_CSTM_ID, STORE.STORE_ID,YEAR,  1  AS MONTH, STORE.GOAL_MONTH1  AS  GOAL_MONTH,  STORE.SALES_MONTH1  AS SALES_MONTH FROM STORE UNION ALL
                                    SELECT STORE.SP_CSTM_ID, STORE.STORE_ID,YEAR,  2  AS MONTH, STORE.GOAL_MONTH2  AS  GOAL_MONTH,  STORE.SALES_MONTH2  AS SALES_MONTH FROM STORE UNION ALL
                                    SELECT STORE.SP_CSTM_ID, STORE.STORE_ID,YEAR,  3  AS MONTH, STORE.GOAL_MONTH3  AS  GOAL_MONTH,  STORE.SALES_MONTH3  AS SALES_MONTH FROM STORE UNION ALL
                                    SELECT STORE.SP_CSTM_ID, STORE.STORE_ID,YEAR,  4  AS MONTH, STORE.GOAL_MONTH4  AS  GOAL_MONTH,  STORE.SALES_MONTH4  AS SALES_MONTH FROM STORE UNION ALL
                                    SELECT STORE.SP_CSTM_ID, STORE.STORE_ID,YEAR,  5  AS MONTH, STORE.GOAL_MONTH5  AS  GOAL_MONTH,  STORE.SALES_MONTH5  AS SALES_MONTH FROM STORE UNION ALL
                                    SELECT STORE.SP_CSTM_ID, STORE.STORE_ID,YEAR,  6  AS MONTH, STORE.GOAL_MONTH6  AS  GOAL_MONTH,  STORE.SALES_MONTH6  AS SALES_MONTH FROM STORE UNION ALL
                                    SELECT STORE.SP_CSTM_ID, STORE.STORE_ID,YEAR,  7  AS MONTH, STORE.GOAL_MONTH7  AS  GOAL_MONTH,  STORE.SALES_MONTH7  AS SALES_MONTH FROM STORE UNION ALL
                                    SELECT STORE.SP_CSTM_ID, STORE.STORE_ID,YEAR,  8  AS MONTH, STORE.GOAL_MONTH8  AS  GOAL_MONTH,  STORE.SALES_MONTH8  AS SALES_MONTH FROM STORE UNION ALL
                                    SELECT STORE.SP_CSTM_ID, STORE.STORE_ID,YEAR,  9  AS MONTH, STORE.GOAL_MONTH9  AS  GOAL_MONTH,  STORE.SALES_MONTH9  AS SALES_MONTH FROM STORE UNION ALL
                                    SELECT STORE.SP_CSTM_ID, STORE.STORE_ID,YEAR,  10 AS MONTH, STORE.GOAL_MONTH10 AS  GOAL_MONTH,  STORE.SALES_MONTH10 AS SALES_MONTH FROM STORE UNION ALL
                                    SELECT STORE.SP_CSTM_ID, STORE.STORE_ID,YEAR,  11 AS MONTH, STORE.GOAL_MONTH11 AS  GOAL_MONTH,  STORE.SALES_MONTH11 AS SALES_MONTH FROM STORE UNION ALL
                                    SELECT STORE.SP_CSTM_ID, STORE.STORE_ID,YEAR,  12 AS MONTH, STORE.GOAL_MONTH12 AS  GOAL_MONTH,  STORE.SALES_MONTH12 AS SALES_MONTH FROM STORE
                               ) A
                        ORDER BY SP_CSTM_ID, STORE_ID,YEAR, MONTH
                       ) A
                       JOIN TBL_EXP_STORE_INFO B
                         ON  1 = 1
                         AND A.SP_CSTM_ID  = B.SP_CSTM_ID
                         AND A.STORE_ID    = B.STORE_ID
                WHERE  1 = 1
                AND    TO_CHAR(A.YYYY_MM_DD, 'YYYY-MM-DD') = #{startDate}
                ORDER BY A.SP_CSTM_ID
                        ,A.STORE_ID
                        ,B.STORE_NM3
                        ,A.YEAR
                        ,A.MONTH
                        ,A.GOAL_MONTH
                        ,A.SALES_MONTH
               ) A
        GROUP BY A.SP_CSTM_ID
                ,A.STORE_ID     
                ,A.STORE_NM3  
        ORDER BY SALES_MONTH DESC
    </select>
            
    <select id="SalesAndPreMonthSales" resultType="java.util.HashMap" flushCache="true"  useCache="false">
    /*  dashboardCorPerformance.SalesAndPreMonthSales */
    SELECT A.SP_CSTM_ID
          ,A.STORE_ID
          ,B.STORE_NM3
          ,SUM(A.NET_SALES)     AS NET_SALES
          ,SUM(A.NET_SALES_PRE) AS NET_SALES_PRE
    FROM   (
                SELECT  A.SP_CSTM_ID
                       ,A.STORE_ID
                       ,SUM(A.NET_SALES) AS NET_SALES
                       ,0                AS NET_SALES_PRE
                FROM   TBL_EXP_STORE_SALES A
                WHERE  1 = 1
                AND    A.SP_CSTM_ID  = #{sessionVo.spCstmId}
                AND    A.YEAR        = #{year}
                AND    A.MONTH       = #{month}
                GROUP BY  A.SP_CSTM_ID
                       ,A.STORE_ID
                UNION ALL
                SELECT  A.SP_CSTM_ID
                       ,A.STORE_ID
                       ,0                AS NET_SALES
                       ,SUM(A.NET_SALES) AS NET_SALES_PRE
                FROM   TBL_EXP_STORE_SALES A
                WHERE  1 = 1
                AND    A.SP_CSTM_ID  = #{sessionVo.spCstmId}
                AND    A.YEAR        = #{prevYear}
                AND    A.MONTH       = #{prevMonth}
                GROUP BY  A.SP_CSTM_ID
                       ,A.STORE_ID
    ) A
    JOIN TBL_EXP_STORE_INFO B
      ON  1 = 1
      AND A.SP_CSTM_ID  = B.SP_CSTM_ID
      AND A.STORE_ID    = B.STORE_ID
    GROUP BY  A.SP_CSTM_ID
             ,A.STORE_ID
             ,B.STORE_NM3
    </select>
                  
                  
    <select id="getComparisonPreMonth" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.getComparisonPreMonth */
        SELECT SP_CSTM_ID
              ,STORE_ID
              ,STORE_NM3
              ,NVL(MAX(AMOUNT), 0) AS AMOUNT
              ,NVL(MAX(AMOUNT_PREVIOUS), 0) AS AMOUNT_PREVIOUS
        FROM   (
                SELECT A.SP_CSTM_ID
                      ,A.STORE_ID
                      ,C.STORE_NM3 
                      ,A.AMOUNT
                      ,NULL      AS AMOUNT_previous
                FROM   TBL_EXP_STORE_FINANCIAL A
                       JOIN TBL_EXP_STORE_INFO C
                         ON  1 = 1
                         AND A.SP_CSTM_ID = C.SP_CSTM_ID
                         AND A.STORE_ID   = C.STORE_ID  
                WHERE  1 = 1
                AND    A.SP_CSTM_ID = #{spCstmId}
                AND    A.SUBJECT = 'SUBJECT_001' 
                AND    A.YEAR    = #{year}
                AND    A.MONTH   = #{month}
                UNION ALL
                SELECT A.SP_CSTM_ID
                      ,A.STORE_ID
                      ,C.STORE_NM3 
                      ,NULL          AS AMOUNT
                      ,A.AMOUNT      AS AMOUNT_previous
                FROM   TBL_EXP_STORE_FINANCIAL A
                       JOIN TBL_EXP_STORE_INFO C
                         ON  1 = 1
                         AND A.SP_CSTM_ID = C.SP_CSTM_ID
                         AND A.STORE_ID   = C.STORE_ID  
                WHERE  1 = 1
                AND    A.SP_CSTM_ID = #{spCstmId}
                AND    A.SUBJECT = 'SUBJECT_001' 
                AND    A.YEAR    = #{preYear}
                AND    A.MONTH   = #{preMonth}
                        ) A
        GROUP BY SP_CSTM_ID
                ,STORE_ID
                ,STORE_NM3  
        ORDER BY SP_CSTM_ID
                ,STORE_ID
    </select>    

    <sql id="getFinancial_body">
        SELECT  ROW_NUMBER() OVER (ORDER BY A.STORE_ID,A.YEAR,A.MONTH DESC) AS RN
               ,A.SP_CSTM_ID
               ,A.STORE_ID
               ,A.YEAR
               ,A.MONTH
               ,A.STORE_NM3
               ,A.SUBJECT
               ,A.SUBJECT_NM 
               ,A.AMOUNT
               ,B.AMOUNT AS AMOUNT1
               ,CASE WHEN B.AMOUNT = 0 THEN 0
                    ELSE ROUND( (A.AMOUNT/B.AMOUNT) * 100 ,2)
               END AS AMOUNT_RAT
        FROM   (
                SELECT A.SP_CSTM_ID
                      ,A.BRAND_ID
                      ,A.STORE_ID
                      ,A.YEAR
                      ,A.MONTH
                      ,C.STORE_NM3
                      ,A.SUBJECT
                      ,GET_CODE_NM('FINANCIAL_SUBJECT', A.SUBJECT) AS SUBJECT_NM 
                      ,A.AMOUNT AS AMOUNT
                FROM   TBL_EXP_STORE_FINANCIAL A
                       JOIN TBL_EXP_STORE_INFO C
                         ON  1 = 1
                         AND A.SP_CSTM_ID = C.SP_CSTM_ID
                         AND A.BRAND_ID   = C.BRAND_ID
                         AND A.STORE_ID   = C.STORE_ID  
                WHERE  1 = 1
                AND    A.SP_CSTM_ID = #{sessionVo.spCstmId}
                <if test=" !'ALL'.equals(parm.storeId) ">
                    AND    A.STORE_ID = #{parm.storeId} 
                </if>
                AND    A.SUBJECT  = #{parm.subject} 
                AND    A.BRAND_ID = #{parm.brandId} 
                AND    A.YEAR     = #{parm.year}
                AND    A.MONTH    = #{parm.month}
               ) A
               JOIN (
                SELECT A.AMOUNT
                      ,A.SP_CSTM_ID
                      ,A.BRAND_ID
                      ,A.STORE_ID
                      ,A.YEAR
                      ,A.MONTH
                FROM   TBL_EXP_STORE_FINANCIAL A
                WHERE  1 = 1
                AND    A.SP_CSTM_ID = #{sessionVo.spCstmId}
                AND    A.BRAND_ID   = #{parm.brandId}
                <if test=" !'ALL'.equals(parm.storeId) ">
                    AND    A.STORE_ID = #{parm.storeId} 
                </if>
                AND    A.SUBJECT = 'SUBJECT_001' 
                AND    A.YEAR    = #{parm.year}
                AND    A.MONTH   = #{parm.month}
               ) B
                 ON  1 = 1
                 AND A.SP_CSTM_ID = B.SP_CSTM_ID
                 AND A.BRAND_ID   = B.BRAND_ID
                 AND A.STORE_ID   = B.STORE_ID    
                 AND A.YEAR       = B.YEAR      
                 AND A.MONTH      = B.MONTH     
        WHERE  1 = 1
    </sql>  
    
    <!-- 매출액 순위, 영업이익별 순위 -->
    <select id="getFinancial" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.getFinancial */
        <include refid="getFinancial_body"/>
        ORDER BY  A.SP_CSTM_ID
                 ,A.YEAR
                 ,A.MONTH
                 ,A.STORE_ID
                 ,A.STORE_NM3 
    </select>
    
    <select id="getFinancial_totalCnt" resultType="Integer">
        /* dashboardCorPerformance.getFinancial_totalCnt  */
        <include refid="common.totalWrapStart"/>
        <include refid="getFinancial_body"/>
        <include refid="common.totalWrapEnd"/>
    </select>
    
    <select id="getFinancial_paging" resultType="java.util.HashMap">
        /* dashboardCorPerformance.getFinancial_paging  */
        <include refid="common.pagingWrapStart"/>
        <include refid="getFinancial_body"/>
        ORDER BY  A.SP_CSTM_ID
              ,A.YEAR
              ,A.MONTH
              ,A.STORE_ID
              ,A.STORE_NM3 
        <include refid="common.pagingWrapEnd"/>
    </select>
    
    <!-- 매장정보 조회 -->
    <select id="getStore" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.getStore */
        SELECT SP_CSTM_ID
              ,STORE_ID
              ,STORE_NM1
              ,STORE_NM2
              ,STORE_NM3
              ,STORE_ID  AS CODE_ID
              ,STORE_NM3 AS CODE_NM
              ,STORE_NM4
              ,STORE_NM5
              ,ADDRESS
              ,STORE_MANAGER_NM
              ,REGION
              ,DEPARTMENT_CHARGE
              ,TO_CHAR( CONTRACT_DATE , 'YYYY-MM-DD')  AS CONTRACT_DATE 
              ,TO_CHAR( OPENING_DAY , 'YYYY-MM-DD')    AS OPENING_DAY
              ,TO_CHAR( TRANSFER_DAY , 'YYYY-MM-DD')   AS TRANSFER_DAY
              ,TO_CHAR( CLOSING_DATE , 'YYYY-MM-DD')   AS CLOSING_DATE
              ,FRANCHISE_STORE
              ,NOTE
              ,TB_ROTATION
              ,TB_ROTATION_GOAL
              ,START_MARKETING
              ,SUPERVISOR
              ,UPDATE_USER
              ,UPDATE_DATE
        FROM   TBL_EXP_STORE_INFO
        WHERE  1 = 1
        AND    SP_CSTM_ID = #{spCstmId}
        <if test=" startDate != null and startDate != '' and endDate != null and endDate != '' " >
            AND    OPENING_DAY BETWEEN TO_DATE( #{startDate}, 'YYYY-MM-DD') AND TO_DATE(#{endDate}, 'YYYY-MM-DD')
        </if>
        <if test=" region != null and region != '' ">
            <if test=" !'ALL'.equals(region) ">
               AND    REGION = #{region} 
            </if>        
        </if>        
        ORDER BY STORE_NM3 
    </select>
    
    <sql id="getStorePage_body">
        SELECT ROW_NUMBER() OVER (ORDER BY  SP_CSTM_ID, STORE_ID) AS RN
              ,SP_CSTM_ID
              ,STORE_ID
              ,STORE_NM1
              ,STORE_NM2
              ,STORE_NM3
              ,STORE_ID  AS CODE_ID
              ,STORE_NM3 AS CODE_NM
              ,STORE_NM4
              ,STORE_NM5
              ,ADDRESS
              ,STORE_MANAGER_NM
              ,REGION
              ,DEPARTMENT_CHARGE
              ,TO_CHAR( CONTRACT_DATE , 'YYYY-MM-DD')  AS CONTRACT_DATE 
              ,TO_CHAR( OPENING_DAY , 'YYYY-MM-DD')    AS OPENING_DAY
              ,TO_CHAR( TRANSFER_DAY , 'YYYY-MM-DD')   AS TRANSFER_DAY
              ,TO_CHAR( CLOSING_DATE , 'YYYY-MM-DD')   AS CLOSING_DATE
              ,FRANCHISE_STORE
              ,NOTE
              ,TB_ROTATION
              ,TB_ROTATION_GOAL
              ,START_MARKETING
              ,SUPERVISOR
              ,UPDATE_USER
              ,UPDATE_DATE
        FROM   TBL_EXP_STORE_INFO
        WHERE  1 = 1
        AND    SP_CSTM_ID = #{sessionVo.spCstmId}
        AND    BRAND_ID   = #{parm.brandId} 
        <if test=" parm.dateStart != null and parm.dateStart != '' and parm.dateEnd != null and parm.dateEnd != '' " >
            AND    OPENING_DAY BETWEEN TO_DATE( #{parm.dateStart}, 'YYYY-MM') AND TO_DATE(#{parm.dateEnd}, 'YYYY-MM')
        </if>
        <if test=" !'ALL'.equals(parm.region) ">
            AND    REGION = #{parm.region} 
        </if>
        <if test=" !'ALL'.equals(parm.supervisor) ">
            AND    SUPERVISOR = #{parm.supervisor} 
        </if>
    </sql>  
    <select id="getStorePage" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.getStorePage */
        <include refid="getStorePage_body"/>
        ORDER BY STORE_NM3 
    </select>
    
    <select id="getStorePage_totalCnt" resultType="Integer">
        /* dashboardCorPerformance.getStorePage_totalCnt  */
        <include refid="common.totalWrapStart"/>
        <include refid="getStorePage_body"/>
        <include refid="common.totalWrapEnd"/>
    </select>
    
    <select id="getStorePage_paging" resultType="java.util.HashMap">
        /* dashboardCorPerformance.getStorePage_paging  */
        <include refid="common.pagingWrapStart"/>
        <include refid="getStorePage_body"/>
        ORDER BY STORE_NM3
        <include refid="common.pagingWrapEnd"/>
    </select>
    
    <select id="getRegionsRanking" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.getRegionsRanking */
        SELECT SP_CSTM_ID
              ,REGION
              ,REGION_NM
              ,YEAR
              ,AMOUNT
              ,ROUND(AMOUNT1) AS AMOUNT1
        FROM   (
                    SELECT B.SP_CSTM_ID
                          ,B.REGION
                          ,GET_CODE_NM('STORE_REGION', B.REGION) AS REGION_NM
                          ,A.YEAR
                          ,SUM(A.AMOUNT)           AS AMOUNT
                          ,SUM(A.AMOUNT)/100000000 AS AMOUNT1
                    FROM   TBL_EXP_STORE_FINANCIAL A
                           JOIN TBL_EXP_STORE_INFO B
                             ON  1 = 1
                             AND A.SP_CSTM_ID = B.SP_CSTM_ID
                             AND A.BRAND_ID   = B.BRAND_ID
                             AND A.STORE_ID   = B.STORE_ID
                    WHERE  1 = 1
                    AND    A.SP_CSTM_ID = #{sessionVo.spCstmId}
                    AND    A.BRAND_ID   = #{brandId} 
                    AND    TO_DATE(A.YEAR||'-'||A.MONTH , 'YYYY-MM')  BETWEEN TO_DATE( #{startDate}, 'YYYY-MM') AND TO_DATE( #{endDate}, 'YYYY-MM') 
                    GROUP BY B.SP_CSTM_ID
                            ,B.REGION
                            ,GET_CODE_NM('STORE_REGION', B.REGION)
                            ,A.YEAR
                    ORDER BY  SUM(A.AMOUNT) DESC
               )
        WHERE  1 = 1
    </select>
    
    <select id="getOpenCloseCnt" resultType="java.util.HashMap" flushCache="true"  useCache="false"> 
        SELECT 'OPEN'  AS TYPE, COUNT(1) AS CNT 
        FROM   TBL_EXP_STORE_INFO 
        WHERE  SP_CSTM_ID = #{spCstmId} 
        AND    BRAND_ID   = #{brandId}
        AND    TO_CHAR( OPENING_DAY,  'YYYY-MM') = #{seartDate}
        <if test=" !'ALL'.equals(region) ">
            AND    REGION     = #{region} 
        </if> 
        <if test=" !'ALL'.equals(supervisor) ">
            AND    SUPERVISOR = #{supervisor} 
        </if> 
        UNION ALL
        SELECT 'CLOSE' AS TYPE, COUNT(1) AS CNT 
        FROM   TBL_EXP_STORE_INFO 
        WHERE  SP_CSTM_ID = #{spCstmId} 
        AND    BRAND_ID   = #{brandId}
        AND    TO_CHAR( CLOSING_DATE, 'YYYY-MM') = #{seartDate} 
        <if test=" !'ALL'.equals(region) ">
            AND    REGION     = #{region} 
        </if> 
        <if test=" !'ALL'.equals(supervisor) ">
            AND    SUPERVISOR = #{supervisor} 
        </if>
        UNION ALL 
        SELECT 'ALL'   AS TYPE, COUNT(1) AS CNT 
        FROM   TBL_EXP_STORE_INFO 
        WHERE  SP_CSTM_ID = #{spCstmId} 
        AND    BRAND_ID   = #{brandId}
        <if test=" !'ALL'.equals(region) ">
            AND    REGION     = #{region} 
        </if> 
        <if test=" !'ALL'.equals(supervisor) ">
            AND    SUPERVISOR = #{supervisor} 
        </if>
        AND    TO_CHAR( OPENING_DAY,  'YYYY-MM') <![CDATA[<=]]> #{seartDate} 
        AND    CLOSING_DATE IS NULL
    </select>
    
    <!--  -->
    <select id="getOpenCloseCntSummary" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.getOpenCloseCntSummary */
		SELECT SUM(ALL_CNT)   AS ALL_CNT
		      ,SUM(CLOSE_CNT) AS CLOSE_CNT
		      ,SUM(ALL_CNT) - SUM(CLOSE_CNT) AS OPEN_CNT
		FROM   (
		        SELECT COUNT(1) AS ALL_CNT
		             , 0        AS CLOSE_CNT
		        FROM TBL_EXP_STORE_INFO 
		        WHERE SP_CSTM_ID = #{sessionVo.spCstmId}
                AND   BRAND_ID   = #{brandId}
		        <if test=" !'ALL'.equals(region) ">
		            AND    REGION     = #{region} 
		        </if> 
		        <if test=" !'ALL'.equals(supervisor) ">
		            AND    SUPERVISOR = #{supervisor} 
		        </if>
		        UNION ALL
		        SELECT 0        AS ALL_CNT 
		              ,COUNT(1) AS CLOSE_CNT 
		        FROM TBL_EXP_STORE_INFO 
		        WHERE SP_CSTM_ID = #{sessionVo.spCstmId}
                AND   BRAND_ID   = #{brandId}
                <if test=" !'ALL'.equals(region) ">
                    AND    REGION     = #{region} 
                </if> 
                <if test=" !'ALL'.equals(supervisor) ">
                    AND    SUPERVISOR = #{supervisor} 
                </if>
		        AND CLOSING_DATE IS NOT NULL
		        )
    </select>
    
    <select id="getRegionCnt" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.getRegionCnt */
        SELECT REGION
		      ,NVL(REGION_NM,'없음') AS  REGION_NM
		      ,CNT 
		FROM   (
		        SELECT REGION
		              ,GET_CODE_NM('STORE_REGION', REGION)      AS REGION_NM
		              ,COUNT(1) AS CNT 
		        FROM TBL_EXP_STORE_INFO 
		        WHERE SP_CSTM_ID = #{sessionVo.spCstmId}
                AND   BRAND_ID   = #{brandId}
		        AND CLOSING_DATE IS  NULL
		        GROUP BY REGION
		        )
		ORDER BY CNT DESC 
    </select>

    <select id="getGoalAchieveRatio" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.getGoalAchieveRatio */
        SELECT  CASE #{month}  WHEN '01'  THEN ROUND( (B.AMOUNT/A.MONTH1) *100, 2) 
                               WHEN '02'  THEN ROUND( (B.AMOUNT/A.MONTH2) *100, 2)
                               WHEN '03'  THEN ROUND( (B.AMOUNT/A.MONTH3) *100, 2)
                               WHEN '04'  THEN ROUND( (B.AMOUNT/A.MONTH4) *100, 2)
                               WHEN '05'  THEN ROUND( (B.AMOUNT/A.MONTH5) *100, 2)
                               WHEN '06'  THEN ROUND( (B.AMOUNT/A.MONTH6) *100, 2)
                               WHEN '07'  THEN ROUND( (B.AMOUNT/A.MONTH7) *100, 2)
                               WHEN '08'  THEN ROUND( (B.AMOUNT/A.MONTH8) *100, 2)
                               WHEN '09'  THEN ROUND( (B.AMOUNT/A.MONTH9) *100, 2)
                               WHEN '10'  THEN ROUND( (B.AMOUNT/A.MONTH10) *100, 2)
                               WHEN '11'  THEN ROUND( (B.AMOUNT/A.MONTH11) *100, 2)
                               WHEN '12'  THEN ROUND( (B.AMOUNT/A.MONTH12) *100, 2)
                               ELSE 0
                END AS ACHIEVE
        FROM   (
                /* 매장별 목표 매출*/
                SELECT SUM(B.MONTH1)      AS MONTH1
                      ,SUM(B.MONTH2)      AS MONTH2 
                      ,SUM(B.MONTH3)      AS MONTH3 
                      ,SUM(B.MONTH4)      AS MONTH4 
                      ,SUM(B.MONTH5)      AS MONTH5 
                      ,SUM(B.MONTH6)      AS MONTH6 
                      ,SUM(B.MONTH7)      AS MONTH7 
                      ,SUM(B.MONTH8)      AS MONTH8 
                      ,SUM(B.MONTH9)      AS MONTH9 
                      ,SUM(B.MONTH10)     AS MONTH10
                      ,SUM(B.MONTH11)     AS MONTH11
                      ,SUM(B.MONTH12)     AS MONTH12
                FROM   TBL_EXP_STORE_INFO A
                       JOIN TBL_EXP_STORE_SALES_GOAL B
                           ON  1 = 1
                           AND A.SP_CSTM_ID = B.SP_CSTM_ID
                           AND A.STORE_ID   = B.STORE_ID
                           AND B.YEAR = #{year} 
                           AND B.BRAND_ID   = #{brandId}
                WHERE  1 = 1
                AND    A.SP_CSTM_ID = #{sessionVo.spCstmId}
                AND    A.BRAND_ID   = #{brandId}
                <if test=" !'ALL'.equals(region) ">
                    AND    A.REGION =  #{region} 
                </if>
                <if test=" !'ALL'.equals(store) ">
                    AND    A.STORE_ID = #{store} 
                </if>
                <if test=" !'ALL'.equals(supervisor) ">
                    AND    A.SUPERVISOR = #{supervisor} 
                </if>
                ) A
               ,(
                    SELECT SUM(B.AMOUNT) AS AMOUNT
                    FROM   TBL_EXP_STORE_INFO A
                           JOIN TBL_EXP_STORE_FINANCIAL B
                             ON  1 = 1
                             AND A.SP_CSTM_ID = B.SP_CSTM_ID
                             AND A.STORE_ID   = B.STORE_ID
                             AND B.YEAR       = #{year}
                             AND B.MONTH      = #{month} 
                             AND B.BRAND_ID   = #{brandId}
                    AND    SUBJECT = 'SUBJECT_001'
                    WHERE  1 = 1
                    AND    A.SP_CSTM_ID = #{sessionVo.spCstmId}
                    AND    A.BRAND_ID   = #{brandId}
                    <if test=" !'ALL'.equals(region) ">
                        AND    A.REGION =  #{region} 
                    </if>
                    <if test=" !'ALL'.equals(store) ">
                        AND    A.STORE_ID = #{store} 
                    </if>
                    <if test=" !'ALL'.equals(supervisor) ">
                      AND    A.SUPERVISOR = #{supervisor} 
                    </if>
                ) B
    </select>

    <select id="getTbRotationRatio" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.getTbRotationRatio */
        SELECT ROUND( AVG(NVL(RECEIPT_CNT2, 0)) ,2)  AS TB_ROTATION_GOAL
        FROM   (
                SELECT A.SP_CSTM_ID
                      ,A.STORE_ID
                      ,A.TB_ROTATION
                      ,A.TB_ROTATION_GOAL
                      ,B.YEAR
                      ,B.MONTH
                      ,SUM(B.RECEIPT_CNT) AS RECEIPT_CNT
                      ,ROUND(SUM(B.RECEIPT_CNT) / MAX(C.DAY_CNT),2) AS RECEIPT_CNT2
                FROM   TBL_EXP_STORE_INFO  A/* 매장정보 */
                       JOIN TBL_EXP_STORE_SALES B
                         ON  1 = 1
                         AND A.SP_CSTM_ID = B.SP_CSTM_ID
                         AND A.STORE_ID   = B.STORE_ID
                         AND B.YEAR       = #{year}
                         AND B.MONTH      = #{month}  
                         AND B.BRAND_ID   = #{brandId}
                       JOIN (
                                SELECT SP_CSTM_ID
                                      ,STORE_ID
                                      ,YEAR
                                      ,MONTH
                                      ,COUNT(1) DAY_CNT
                                FROM   TBL_EXP_STORE_SALES
                                WHERE  1 = 1
                                AND    SP_CSTM_ID = #{sessionVo.spCstmId}
                                AND    YEAR       = #{year}
                                AND    MONTH      = #{month} 
                                AND    BRAND_ID   = #{brandId}
                                AND    RECEIPT_CNT IS NOT NULL
                                AND    RECEIPT_CNT != 0
                                GROUP BY SP_CSTM_ID
                                        ,STORE_ID
                                        ,YEAR
                                        ,MONTH
                            ) C
                         ON  1 = 1
                         AND B.SP_CSTM_ID = C.SP_CSTM_ID
                         AND B.STORE_ID   = C.STORE_ID
                         AND B.YEAR       = C.YEAR
                         AND B.MONTH      = C.MONTH
                WHERE  1 = 1
                AND    A.SP_CSTM_ID = #{sessionVo.spCstmId}
                AND    A.BRAND_ID   = #{brandId}
                AND    A.TB_ROTATION IS NOT NULL
                GROUP BY A.SP_CSTM_ID
                        ,A.STORE_ID
                        ,A.TB_ROTATION
                        ,A.TB_ROTATION_GOAL
                        ,B.YEAR
                        ,B.MONTH
                ORDER BY A.SP_CSTM_ID
                        ,A.STORE_ID  
                )
    </select> 
    
    <select id="getGrowthRate" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.getGrowthRate */
        SELECT CASE WHEN MAX(A.AMOUNT1) != 0 AND MAX(A.AMOUNT2) !=  0 THEN ROUND((MAX(A.AMOUNT1)/MAX(A.AMOUNT2)) * 100,2)
                    ELSE 0
               END AS GROWTH_RATE
        FROM   (
                /* 조회년도 */
                SELECT SUM(B.AMOUNT) AS AMOUNT1
                      ,0             AS AMOUNT2
                FROM   TBL_EXP_STORE_INFO A
                       JOIN TBL_EXP_STORE_FINANCIAL B
                         ON  1 = 1
                         AND A.SP_CSTM_ID = B.SP_CSTM_ID
                         AND A.STORE_ID   = B.STORE_ID
                         AND B.YEAR       = #{year}
                         AND B.MONTH      = #{month} 
                         AND B.BRAND_ID   = #{brandId}
                AND    SUBJECT = 'SUBJECT_001'
                WHERE  1 = 1
                AND    A.SP_CSTM_ID = #{sessionVo.spCstmId}
                AND    A.BRAND_ID   = #{brandId}
                UNION ALL
                /* 조회 전년도 */
                SELECT 0             AS AMOUNT1
                      ,SUM(B.AMOUNT) AS AMOUNT2
                FROM   TBL_EXP_STORE_INFO A
                       JOIN TBL_EXP_STORE_FINANCIAL B
                         ON  1 = 1
                         AND A.SP_CSTM_ID = B.SP_CSTM_ID
                         AND A.STORE_ID   = B.STORE_ID
                         AND B.YEAR       = #{previousYear}
                         AND B.MONTH      = #{month} 
                         AND B.BRAND_ID   = #{brandId} 
                AND    SUBJECT = 'SUBJECT_001'
                WHERE  1 = 1
                AND    A.SP_CSTM_ID = #{sessionVo.spCstmId}
                AND    A.BRAND_ID   = #{brandId}
                ) A   
    </select>    

    <select id="getGoalAchieveRatioRank" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.getGoalAchieveRatioRank */
        SELECT A.SP_CSTM_ID
              ,A.STORE_ID
              ,A.STORE_NM3
              ,A.YEAR
              ,A.MONTH
              ,A.GOLE_AMOUNT
              ,A.AMOUNT
              ,A.ACHIEVE_RATIO
        FROM   (
                SELECT A.SP_CSTM_ID
                      ,A.STORE_ID
                      ,A.STORE_NM3
                      ,A.YEAR
                      ,A.MONTH
                      ,A.GOLE_AMOUNT
                      ,B.AMOUNT
                      ,ROUND( ((B.AMOUNT /  A.GOLE_AMOUNT) * 100) ,2) AS ACHIEVE_RATIO
                FROM   (
                            SELECT B.SP_CSTM_ID
                                  ,B.STORE_ID
                                  ,A.STORE_NM3
                                  ,B.YEAR
                                  ,#{month} AS MONTH
                                  ,CASE #{month}  WHEN '01'  THEN B.MONTH1
                                                  WHEN '02'  THEN B.MONTH2
                                                  WHEN '03'  THEN B.MONTH3
                                                  WHEN '04'  THEN B.MONTH4
                                                  WHEN '05'  THEN B.MONTH5
                                                  WHEN '06'  THEN B.MONTH6
                                                  WHEN '07'  THEN B.MONTH7
                                                  WHEN '08'  THEN B.MONTH8
                                                  WHEN '09'  THEN B.MONTH9
                                                  WHEN '10'  THEN B.MONTH10
                                                  WHEN '11'  THEN B.MONTH11
                                                  WHEN '12'  THEN B.MONTH12
                                                  ELSE 0
                                    END AS GOLE_AMOUNT
                            FROM   TBL_EXP_STORE_INFO A
                                   JOIN TBL_EXP_STORE_SALES_GOAL B
                                       ON  1 = 1
                                       AND A.SP_CSTM_ID = B.SP_CSTM_ID
                                       AND A.STORE_ID   = B.STORE_ID
                                       AND B.MONTH1     IS NOT NULL
                                       AND B.YEAR       = #{year}
                                       AND B.BRAND_ID   = #{brandId}
                            WHERE  1 = 1
                            AND    A.SP_CSTM_ID = #{sessionVo.spCstmId}
                            AND    A.BRAND_ID   = #{brandId}
                            <if test=" !'ALL'.equals(region) ">
                                AND    A.REGION =  #{region} 
                            </if>
                            <if test=" !'ALL'.equals(store) ">
                                AND    A.STORE_ID = #{store} 
                            </if>
                            <if test=" !'ALL'.equals(supervisor) ">
                                AND    A.SUPERVISOR = #{supervisor} 
                            </if>
                        ) A
                        JOIN (  
                            SELECT B.SP_CSTM_ID
                                  ,B.STORE_ID
                                  ,A.STORE_NM3
                                  ,B.YEAR
                                  ,B.MONTH
                                  ,B.AMOUNT AS AMOUNT
                            FROM   TBL_EXP_STORE_INFO A
                                   JOIN TBL_EXP_STORE_FINANCIAL B
                                     ON  1 = 1
                                     AND A.SP_CSTM_ID = B.SP_CSTM_ID
                                     AND A.STORE_ID   = B.STORE_ID
                                     AND B.AMOUNT     IS NOT NULL
                                     AND B.YEAR       = #{year}
                                     AND B.MONTH      = #{month} 
                                     AND A.BRAND_ID   = #{brandId}
                            AND    SUBJECT = 'SUBJECT_001'
                            WHERE  1 = 1
                            AND    A.SP_CSTM_ID = #{sessionVo.spCstmId}
                            AND    A.BRAND_ID   = #{brandId}
                            <if test=" !'ALL'.equals(region) ">
                                AND    A.REGION =  #{region} 
                            </if>
                            <if test=" !'ALL'.equals(store) ">
                                AND    A.STORE_ID = #{store} 
                            </if>
                            <if test=" !'ALL'.equals(supervisor) ">
                                AND    A.SUPERVISOR = #{supervisor} 
                            </if>
                        ) B
                        ON  1 = 1
                        AND A.SP_CSTM_ID = B.SP_CSTM_ID   
                        AND A.STORE_ID   = B.STORE_ID   
                        AND A.YEAR       = B.YEAR     
                        AND A.MONTH      = B.MONTH 
               ) A
        WHERE 1 = 1
        ORDER BY A.ACHIEVE_RATIO DESC 
    </select>        
    
    <select id="getTbRotationRatioRank" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.getTbRotationRatioRank */
                SELECT A.SP_CSTM_ID
                      ,A.STORE_ID
                      ,A.STORE_NM3 
                      ,A.TB_ROTATION
                      ,A.TB_ROTATION_GOAL
                      ,B.YEAR
                      ,B.MONTH
                      ,ROUND((A.TB_ROTATION_GOAL/ROUND(SUM(B.RECEIPT_CNT) / MAX(C.DAY_CNT),2)) * 100,2)  AS TB_ROTATION_RATIO
                FROM   TBL_EXP_STORE_INFO  A/* 매장정보 */
                       JOIN TBL_EXP_STORE_SALES B
                         ON  1 = 1
                         AND A.SP_CSTM_ID = B.SP_CSTM_ID
                         AND A.STORE_ID   = B.STORE_ID
                         AND B.YEAR       = #{year}
                         AND B.MONTH      = #{month} 
                         AND B.BRAND_ID   = #{brandId}
                       JOIN (
                                SELECT SP_CSTM_ID
                                      ,STORE_ID
                                      ,YEAR
                                      ,MONTH
                                      ,COUNT(1) DAY_CNT
                                FROM   TBL_EXP_STORE_SALES
                                WHERE  1 = 1
                                AND    SP_CSTM_ID = #{sessionVo.spCstmId}
                                AND    YEAR       = #{year}
                                AND    MONTH      = #{month} 
                                AND    BRAND_ID   = #{brandId}
                                AND    RECEIPT_CNT IS NOT NULL
                                AND    RECEIPT_CNT != 0
                                GROUP BY SP_CSTM_ID
                                        ,STORE_ID
                                        ,YEAR
                                        ,MONTH
                            ) C
                         ON  1 = 1
                         AND B.SP_CSTM_ID = C.SP_CSTM_ID
                         AND B.STORE_ID   = C.STORE_ID
                         AND B.YEAR       = C.YEAR
                         AND B.MONTH      = C.MONTH
                WHERE  1 = 1
                AND    A.SP_CSTM_ID = #{sessionVo.spCstmId}
                AND    A.BRAND_ID   = #{brandId}
                AND    A.TB_ROTATION IS NOT NULL
                <if test=" !'ALL'.equals(region) ">
                    AND    A.REGION =  #{region} 
                </if>
                <if test=" !'ALL'.equals(store) ">
                    AND    A.STORE_ID = #{store} 
                </if>
                <if test=" !'ALL'.equals(supervisor) ">
                    AND    A.SUPERVISOR = #{supervisor} 
                </if>
                GROUP BY A.SP_CSTM_ID
                        ,A.STORE_ID
                        ,A.STORE_NM3
                        ,A.TB_ROTATION
                        ,A.TB_ROTATION_GOAL
                        ,B.YEAR
                        ,B.MONTH
                ORDER BY ROUND((A.TB_ROTATION_GOAL/ROUND(SUM(B.RECEIPT_CNT) / MAX(C.DAY_CNT),2)) * 100,2) DESC
    </select> 
    
    <select id="getPreMonthAchieveRatio" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.getPreMonthAchieveRatio */
        SELECT  SP_CSTM_ID
               ,PRE_MONTH_ACHIEVE_RATIO
        FROM   (
                    SELECT A.SP_CSTM_ID
                          ,CASE WHEN SUM(A.PRE_AMOUNT) !=  0 THEN ROUND( (SUM(A.AMOUNT)/SUM(A.PRE_AMOUNT)) * 100 ,2)
                                ELSE 0
                           END AS PRE_MONTH_ACHIEVE_RATIO
                    FROM   (
                                /* 당월 */
                                SELECT B.SP_CSTM_ID
                                      ,B.STORE_ID
                                      ,A.STORE_NM3
                                      ,B.AMOUNT AS AMOUNT
                                      ,0        AS PRE_AMOUNT
                                FROM   TBL_EXP_STORE_INFO A
                                       JOIN TBL_EXP_STORE_FINANCIAL B
                                         ON  1 = 1
                                         AND A.SP_CSTM_ID = B.SP_CSTM_ID
                                         AND A.STORE_ID   = B.STORE_ID
                                         AND B.AMOUNT     IS NOT NULL
                                         AND B.YEAR       = #{year}
                                         AND B.MONTH      = #{month} 
                                         AND B.BRAND_ID   = #{brandId} 
                                         AND B.SUBJECT = 'SUBJECT_001'
                                WHERE  1 = 1 
                                AND    A.SP_CSTM_ID = #{sessionVo.spCstmId}
                                AND    A.BRAND_ID   = #{brandId}
                                <if test=" !'ALL'.equals(region) ">
                                    AND    A.REGION =  #{region} 
                                </if>
                                <if test=" !'ALL'.equals(store) ">
                                    AND    A.STORE_ID = #{store} 
                                </if>
                                <if test=" !'ALL'.equals(supervisor) ">
                                    AND    A.SUPERVISOR = #{supervisor} 
                                </if> 
                                UNION ALL
                                /* 전월 */
                                SELECT B.SP_CSTM_ID
                                      ,B.STORE_ID
                                      ,A.STORE_NM3
                                      ,0        AS AMOUNT
                                      ,B.AMOUNT AS PRE_AMOUNT
                                FROM   TBL_EXP_STORE_INFO A
                                       JOIN TBL_EXP_STORE_FINANCIAL B
                                         ON  1 = 1
                                         AND A.SP_CSTM_ID = B.SP_CSTM_ID
                                         AND A.STORE_ID   = B.STORE_ID
                                         AND B.AMOUNT     IS NOT NULL
                                         AND B.YEAR       = #{prevYear}
                                         AND B.MONTH      = #{prevMonth}
                                         AND B.BRAND_ID   = #{brandId}
                                         AND B.SUBJECT    = 'SUBJECT_001'
                                WHERE  1 = 1
                                AND    A.SP_CSTM_ID = #{sessionVo.spCstmId}
                                AND    A.BRAND_ID   = #{brandId} 
                                <if test=" !'ALL'.equals(region) ">
                                    AND    A.REGION =  #{region} 
                                </if>
                                <if test=" !'ALL'.equals(store) ">
                                    AND    A.STORE_ID = #{store} 
                                </if>
                                <if test=" !'ALL'.equals(supervisor) ">
                                    AND    A.SUPERVISOR = #{supervisor} 
                                </if> 
                                ) A
                    GROUP BY  A.SP_CSTM_ID
               ) A
    </select> 

    
    <select id="getPreMonthAchieveRatioRank" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.getPreMonthAchieveRatioRank */
        SELECT A.STORE_ID
              ,A.STORE_NM3
              ,A.YEAR       
              ,A.MONTH
              ,A.PRE_MONTH_ACHIEV_RATIO
        FROM   (
                SELECT A.STORE_ID
                      ,A.STORE_NM3
                      ,A.YEAR       
                      ,A.MONTH
                      ,SUM(A.AMOUNT)     AS AMOUNT
                      ,SUM(A.PRE_AMOUNT) AS PRE_AMOUNT
                      ,CASE WHEN SUM(A.PRE_AMOUNT) !=  0 THEN ROUND( (SUM(A.AMOUNT)/SUM(A.PRE_AMOUNT)) * 100 ,2)
                            ELSE 0
                       END AS PRE_MONTH_ACHIEV_RATIO
                FROM   (
                /* 당월 */
                SELECT A.STORE_ID
                      ,A.STORE_NM3
                      ,B.YEAR       
                      ,B.MONTH
                      ,SUM(B.AMOUNT) AS AMOUNT
                      ,0             AS PRE_AMOUNT
                FROM   TBL_EXP_STORE_INFO A
                       JOIN TBL_EXP_STORE_FINANCIAL B
                         ON  1 = 1
                         AND A.SP_CSTM_ID = B.SP_CSTM_ID
                         AND A.STORE_ID   = B.STORE_ID
                         AND B.YEAR       = #{year} 
                         AND B.MONTH      = #{month}  
                         AND B.BRAND_ID   = #{brandId}  
                AND    SUBJECT = 'SUBJECT_001'
                WHERE  1 = 1
                AND    A.SP_CSTM_ID = #{sessionVo.spCstmId}
                AND    A.BRAND_ID   = #{brandId}
               <if test=" !'ALL'.equals(region) ">
                   AND    A.REGION =  #{region} 
               </if>
               <if test=" !'ALL'.equals(store) ">
                   AND    A.STORE_ID = #{store} 
               </if>
               <if test=" !'ALL'.equals(supervisor) ">
                   AND    A.SUPERVISOR = #{supervisor} 
               </if>
                GROUP BY A.STORE_ID
                        ,A.STORE_NM3
                        ,B.YEAR
                        ,B.MONTH
                UNION ALL 
                /* 전월 */
                SELECT A.STORE_ID
                      ,A.STORE_NM3
                      ,B.YEAR     
                      ,#{month}      AS MONTH
                      ,0             AS AMOUNT
                      ,SUM(B.AMOUNT) AS PRE_AMOUNT
                FROM   TBL_EXP_STORE_INFO A
                       JOIN TBL_EXP_STORE_FINANCIAL B
                         ON  1 = 1
                         AND A.SP_CSTM_ID = B.SP_CSTM_ID
                         AND A.STORE_ID   = B.STORE_ID
                         AND B.YEAR       = #{prevYear}
                         AND B.MONTH      = #{prevMonth}  
                         AND B.BRAND_ID   = #{brandId} 
                AND    SUBJECT = 'SUBJECT_001'
                WHERE  1 = 1
                AND    A.SP_CSTM_ID = #{sessionVo.spCstmId}
                AND    A.BRAND_ID   = #{brandId}
                <if test=" !'ALL'.equals(region) ">
                    AND    A.REGION =  #{region} 
                </if>
                <if test=" !'ALL'.equals(store) ">
                    AND    A.STORE_ID = #{store} 
                </if>
                <if test=" !'ALL'.equals(supervisor) ">
                    AND    A.SUPERVISOR = #{supervisor} 
                </if>
                GROUP BY A.STORE_ID
                        ,A.STORE_NM3
                        ,B.YEAR
                        ,B.MONTH
                ) A
                GROUP BY A.STORE_ID
                        ,A.STORE_NM3
                        ,A.YEAR
                        ,A.MONTH      
        ) A
        ORDER BY A.PRE_MONTH_ACHIEV_RATIO DESC
    </select> 
    
    <select id="getPreMonthTbRotationRatioRank" resultType="java.util.HashMap" flushCache="true"  useCache="false">
    /* dashboardCorPerformance.getPreMonthTbRotationRatioRank */
    SELECT SP_CSTM_ID
          ,STORE_ID
          ,STORE_NM3
          ,TB_ROTATION_RATIO
    FROM   (
        SELECT SP_CSTM_ID
              ,STORE_ID
              ,STORE_NM3
              ,CASE WHEN SUM(PRE_RECEIPT_CNT) !=  0 THEN  ROUND(SUM(RECEIPT_CNT)/SUM(PRE_RECEIPT_CNT) *100,2)
                    ELSE 0
               END AS TB_ROTATION_RATIO
        FROM  (
                        /* 당월 */
                        SELECT A.SP_CSTM_ID
                              ,B.YEAR
                              ,B.MONTH
                              ,A.STORE_ID
                              ,A.STORE_NM3 
                              ,CASE WHEN MAX(C.DAY_CNT) !=  0 THEN ROUND((SUM(B.RECEIPT_CNT) / MAX(C.DAY_CNT) )  ,2)
                                    ELSE 0
                               END      AS RECEIPT_CNT
                              ,0        AS PRE_RECEIPT_CNT
                        FROM   TBL_EXP_STORE_INFO  A/* 매장정보 */
                               JOIN TBL_EXP_STORE_SALES B
                                 ON  1 = 1
                                 AND A.SP_CSTM_ID = B.SP_CSTM_ID
                                 AND A.STORE_ID   = B.STORE_ID
                                 AND B.YEAR       = #{year} 
                                 AND B.MONTH      = #{month} 
                                 AND B.BRAND_ID   = #{brandId} 
                               JOIN (
                                        SELECT SP_CSTM_ID
                                              ,STORE_ID
                                              ,YEAR
                                              ,MONTH
                                              ,COUNT(1) DAY_CNT
                                        FROM   TBL_EXP_STORE_SALES
                                        WHERE  1 = 1
                                        AND    SP_CSTM_ID = #{sessionVo.spCstmId}
                                        AND    YEAR       = #{year} 
                                        AND    MONTH      = #{month} 
                                        AND    BRAND_ID   = #{brandId} 
                                        AND    RECEIPT_CNT IS NOT NULL
                                        AND    RECEIPT_CNT != 0
                                        GROUP BY SP_CSTM_ID
                                                ,STORE_ID
                                                ,YEAR
                                                ,MONTH
                                    ) C
                                 ON  1 = 1
                                 AND B.SP_CSTM_ID = C.SP_CSTM_ID
                                 AND B.STORE_ID   = C.STORE_ID
                                 AND B.YEAR       = C.YEAR
                                 AND B.MONTH      = C.MONTH
                        WHERE  1 = 1
                        AND    A.SP_CSTM_ID = #{sessionVo.spCstmId}
                        AND    A.BRAND_ID   = #{brandId} 
                        <if test=" !'ALL'.equals(region) ">
                            AND    A.REGION =  #{region} 
                        </if>
                        <if test=" !'ALL'.equals(store) ">
                            AND    STORE_ID = #{store} 
                        </if>
                        <if test=" !'ALL'.equals(supervisor) ">
                            AND    A.SUPERVISOR = #{supervisor} 
                        </if>
                        GROUP BY A.SP_CSTM_ID
                                ,B.YEAR
                                ,B.MONTH
                                ,A.STORE_ID
                                ,A.STORE_NM3
                        UNION ALL
                        /* 전월 */
                        SELECT A.SP_CSTM_ID
                              ,B.YEAR
                              ,B.MONTH
                              ,A.STORE_ID
                              ,A.STORE_NM3 
                              ,0        AS RECEIPT_CNT 
                              ,CASE WHEN MAX(C.DAY_CNT) !=  0 THEN ROUND((SUM(B.RECEIPT_CNT) / MAX(C.DAY_CNT) )  ,2)
                                    ELSE 0
                               END       AS PRE_RECEIPT_CNT
                        FROM   TBL_EXP_STORE_INFO  A/* 매장정보 */
                               JOIN TBL_EXP_STORE_SALES B
                                 ON  1 = 1
                                 AND A.SP_CSTM_ID = B.SP_CSTM_ID
                                 AND A.STORE_ID   = B.STORE_ID
                                 AND B.YEAR       = #{prevYear}
                                 AND B.MONTH      = #{prevMonth}
                                 AND B.BRAND_ID   = #{brandId} 
                               JOIN (
                                        SELECT SP_CSTM_ID
                                              ,STORE_ID
                                              ,YEAR
                                              ,MONTH
                                              ,COUNT(1) DAY_CNT
                                        FROM   TBL_EXP_STORE_SALES
                                        WHERE  1 = 1
                                        AND    SP_CSTM_ID = #{sessionVo.spCstmId}
                                        AND    YEAR       = #{prevYear}
                                        AND    MONTH      = #{prevMonth}
                                        AND    BRAND_ID   = #{brandId} 
                                        AND    RECEIPT_CNT IS NOT NULL
                                        AND    RECEIPT_CNT != 0
                                        GROUP BY SP_CSTM_ID
                                                ,STORE_ID
                                                ,YEAR
                                                ,MONTH
                                    ) C
                                 ON  1 = 1
                                 AND B.SP_CSTM_ID = C.SP_CSTM_ID
                                 AND B.STORE_ID   = C.STORE_ID
                                 AND B.YEAR       = C.YEAR
                                 AND B.MONTH      = C.MONTH
                        WHERE  1 = 1
                        AND    A.SP_CSTM_ID = #{sessionVo.spCstmId}
                        AND    A.BRAND_ID   = #{brandId}
                        <if test=" !'ALL'.equals(region) ">
                            AND    A.REGION =  #{region} 
                        </if>
                        <if test=" !'ALL'.equals(store) ">
                            AND    STORE_ID = #{store} 
                        </if>
                        <if test=" !'ALL'.equals(supervisor) ">
                            AND    A.SUPERVISOR = #{supervisor} 
                        </if>
                        GROUP BY A.SP_CSTM_ID
                                ,B.YEAR
                                ,B.MONTH
                                ,A.STORE_ID
                                ,A.STORE_NM3
        )
         GROUP BY SP_CSTM_ID
              ,STORE_ID
              ,STORE_NM3
    )
    ORDER BY TB_ROTATION_RATIO DESC
    </select> 

    <select id="getPreMonthTbRotationRatio" resultType="java.util.HashMap" flushCache="true"  useCache="false">
    /* dashboardCorPerformance.getPreMonthTbRotationRatio */
    SELECT SP_CSTM_ID
          ,TB_ROTATION_RATIO
    FROM   (
        SELECT SP_CSTM_ID
              ,CASE WHEN SUM(PRE_RECEIPT_CNT) !=  0 THEN  ROUND(SUM(RECEIPT_CNT)/SUM(PRE_RECEIPT_CNT) *100,2)
                    ELSE 0
               END AS TB_ROTATION_RATIO
        FROM  (
                        /* 당월 */
                        SELECT A.SP_CSTM_ID
                              ,B.YEAR
                              ,B.MONTH
                              ,A.STORE_ID
                              ,A.STORE_NM3 
                              ,CASE WHEN MAX(C.DAY_CNT) !=  0 THEN ROUND((SUM(B.RECEIPT_CNT) / MAX(C.DAY_CNT) )  ,2)
                                    ELSE 0
                               END      AS RECEIPT_CNT
                              ,0        AS PRE_RECEIPT_CNT
                        FROM   TBL_EXP_STORE_INFO  A/* 매장정보 */
                               JOIN TBL_EXP_STORE_SALES B
                                 ON  1 = 1
                                 AND A.SP_CSTM_ID = B.SP_CSTM_ID
                                 AND A.STORE_ID   = B.STORE_ID
                                 AND B.YEAR       = #{year} 
                                 AND B.MONTH      = #{month} 
                                 AND B.BRAND_ID   = #{brandId}
                               JOIN (
                                        SELECT SP_CSTM_ID
                                              ,STORE_ID
                                              ,YEAR
                                              ,MONTH
                                              ,COUNT(1) DAY_CNT
                                        FROM   TBL_EXP_STORE_SALES
                                        WHERE  1 = 1
                                        AND    SP_CSTM_ID = #{sessionVo.spCstmId}
                                        AND    YEAR       = #{year} 
                                        AND    MONTH      = #{month} 
                                        AND    BRAND_ID   = #{brandId}
                                        AND    RECEIPT_CNT IS NOT NULL
                                        AND    RECEIPT_CNT != 0
                                        GROUP BY SP_CSTM_ID
                                                ,STORE_ID
                                                ,YEAR
                                                ,MONTH
                                    ) C
                                 ON  1 = 1
                                 AND B.SP_CSTM_ID = C.SP_CSTM_ID
                                 AND B.STORE_ID   = C.STORE_ID
                                 AND B.YEAR       = C.YEAR
                                 AND B.MONTH      = C.MONTH
                        WHERE  1 = 1
                        AND    A.SP_CSTM_ID = #{sessionVo.spCstmId}
                        AND    A.BRAND_ID   = #{brandId}
                        <if test=" !'ALL'.equals(region) ">
                            AND    A.REGION =  #{region} 
                        </if>
                        <if test=" !'ALL'.equals(store) ">
                            AND    STORE_ID = #{store} 
                        </if>
                        <if test=" !'ALL'.equals(supervisor) ">
                            AND    A.SUPERVISOR = #{supervisor} 
                        </if>
                        GROUP BY A.SP_CSTM_ID
                                ,B.YEAR
                                ,B.MONTH
                                ,A.STORE_ID
                                ,A.STORE_NM3
                        UNION ALL
                        /* 전월 */
                        SELECT A.SP_CSTM_ID
                              ,B.YEAR
                              ,B.MONTH
                              ,A.STORE_ID
                              ,A.STORE_NM3 
                              ,0        AS RECEIPT_CNT 
                              ,CASE WHEN MAX(C.DAY_CNT) !=  0 THEN ROUND((SUM(B.RECEIPT_CNT) / MAX(C.DAY_CNT) )  ,2)
                                    ELSE 0
                               END       AS PRE_RECEIPT_CNT
                        FROM   TBL_EXP_STORE_INFO  A/* 매장정보 */
                               JOIN TBL_EXP_STORE_SALES B
                                 ON  1 = 1
                                 AND A.SP_CSTM_ID = B.SP_CSTM_ID
                                 AND A.STORE_ID   = B.STORE_ID
                                 AND B.YEAR       = #{prevYear}
                                 AND B.MONTH      = #{prevMonth} 
                                 AND B.BRAND_ID   = #{brandId}
                               JOIN (
                                        SELECT SP_CSTM_ID
                                              ,STORE_ID
                                              ,YEAR
                                              ,MONTH
                                              ,COUNT(1) DAY_CNT
                                        FROM   TBL_EXP_STORE_SALES
                                        WHERE  1 = 1
                                        AND    SP_CSTM_ID = #{sessionVo.spCstmId}
                                        AND    YEAR       = #{prevYear}
                                        AND    MONTH      = #{prevMonth}
                                        AND    BRAND_ID   = #{brandId}
                                        AND    RECEIPT_CNT IS NOT NULL
                                        AND    RECEIPT_CNT != 0
                                        GROUP BY SP_CSTM_ID
                                                ,STORE_ID
                                                ,YEAR
                                                ,MONTH
                                    ) C
                                 ON  1 = 1
                                 AND B.SP_CSTM_ID = C.SP_CSTM_ID
                                 AND B.STORE_ID   = C.STORE_ID
                                 AND B.YEAR       = C.YEAR
                                 AND B.MONTH      = C.MONTH
                        WHERE  1 = 1
                        AND    A.SP_CSTM_ID = #{sessionVo.spCstmId}
                        AND    A.BRAND_ID   = #{brandId}
                        <if test=" !'ALL'.equals(region) ">
                            AND    A.REGION =  #{region} 
                        </if>
                        <if test=" !'ALL'.equals(store) ">
                            AND    STORE_ID = #{store} 
                        </if>
                        <if test=" !'ALL'.equals(supervisor) ">
                            AND    A.SUPERVISOR = #{supervisor} 
                        </if>
                        GROUP BY A.SP_CSTM_ID
                                ,B.YEAR
                                ,B.MONTH
                                ,A.STORE_ID
                                ,A.STORE_NM3
        )
         GROUP BY SP_CSTM_ID
    )
    </select>
    
    <select id="getWeekList" resultType="java.util.HashMap" flushCache="true"  useCache="false">
	    /* dashboardCorPerformance.getWeekList */
		WITH ISO AS(    
		SELECT TO_CHAR(WEEK_START, 'YYYY-MM-DD') AS WEEK_START        
		      ,TO_CHAR(WEEK_END, 'YYYY-MM-DD')   AS WEEK_END        
		      ,TO_CHAR(WEEK_START, 'WW')         AS WEEK_OF_YEAR_ISO        
		      ,TO_CHAR(WEEK_START, 'W')          AS WEEK_OF_MONTH    
		FROM   (        
		          SELECT    TRUNC(START_DT + LEVEL, 'D') WEEK_START            
		                   ,TRUNC(START_DT + LEVEL, 'D') + 6 WEEK_END        
		          FROM     (            
		                      SELECT  TO_DATE( #{weekStart} , 'YYYYMMDD') - 1 START_DT                
		                             ,TO_DATE( #{weekEnd} , 'YYYYMMDD') END_DT            
		                      FROM DUAL        
		                    )        
		          CONNECT BY LEVEL <![CDATA[ <= ]]> END_DT - START_DT    
		       )    
		GROUP BY WEEK_START, WEEK_END    
		ORDER BY WEEK_START
		)
		SELECT  ROWNUM AS WEEK_OF_YEAR
		        ,A.WEEK_START 
		        ,A.WEEK_END 
		        ,A.WEEK_START||' ~ '||A.WEEK_END AS START_END
		        ,A.WEEK_OF_YEAR_ISO 
		        ,A.WEEK_OF_MONTH 
		FROM ISO A   
        WHERE 1 = 1
        AND   A.WEEK_START <![CDATA[ <= ]]> TO_CHAR(GET_KRDT(SYSDATE), 'YYYY-MM-DD')   
    </select>
    
    <select id="getSalesByWeek" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /* dashboardCorPerformance.getSalesByWeek */
        WITH BASE_TB AS(    
                    SELECT A.SP_CSTM_ID
                          ,A.STORE_ID
                          ,A.STORE_NM3
                          ,TO_CHAR(B.YEAR) AS YEAR 
                          ,TO_CHAR(B.MONTH) AS MONTH
                          ,TO_CHAR(LPAD(B.DAY, 2, '0')) AS DAY 
                          ,TO_DATE(TO_CHAR(B.YEAR)||TO_CHAR(B.MONTH)||TO_CHAR(LPAD(B.DAY, 2, '0')), 'YYYYMMDD') AS STR_DATE
                          ,B.NET_SALES
                          ,B.RECEIPT_CNT
                    FROM   TBL_EXP_STORE_INFO A
                           JOIN TBL_EXP_STORE_SALES B
                             ON  1 = 1
                             AND A.SP_CSTM_ID  = B.SP_CSTM_ID
                             AND A.BRAND_ID    = B.BRAND_ID
                             AND A.STORE_ID    = B.STORE_ID
                    WHERE  1 = 1
                    AND    A.SP_CSTM_ID = #{sessionVo.spCstmId}
                    AND    A.BRAND_ID   = #{brandId}
			        <if test=" !'ALL'.equals(store) and store != null and store != ''  ">
			            AND    A.STORE_ID   = #{store}
			        </if>
			        <if test=" !'ALL'.equals(region) and region != null and region != ''  ">
			            AND    A.REGION   = #{region}
			        </if>
			        <if test=" !'ALL'.equals(supervisor) and supervisor != null and supervisor != ''  ">
			            AND    A.SUPERVISOR   = #{supervisor}
			        </if>
                    ORDER BY A.SP_CSTM_ID
                            ,A.STORE_ID
                            ,B.YEAR
                            ,B.MONTH
                            ,B.DAY
                   )
        SELECT A.SP_CSTM_ID
              ,A.STR_DATE     
              ,TO_CHAR(TO_DATE(A.STR_DATE     , 'YYYY-MM-DD HH24:MI:SS') -7, 'YYYY-MM-DD')  AS PRE_STR_DATE
              ,A.NET_SALES      
              ,A.RECEIPT_CNT    
              ,A.PRE_NET_SALES  
              ,A.PRE_RECEIPT_CNT
        FROM   (
                SELECT A.SP_CSTM_ID
                      ,A.STR_DATE             AS STR_DATE
                      ,SUM(A.NET_SALES)       AS NET_SALES
                      ,SUM(A.RECEIPT_CNT)     AS RECEIPT_CNT
                      ,SUM(A.PRE_NET_SALES)   AS PRE_NET_SALES
                      ,SUM(A.PRE_RECEIPT_CNT) AS PRE_RECEIPT_CNT
                FROM   (
                        /*조회 주차*/
                        SELECT  BASE_TB.SP_CSTM_ID
                               ,BASE_TB.STORE_ID
                               ,BASE_TB.STORE_NM3
                               ,TO_CHAR(BASE_TB.STR_DATE,'YYYY-MM-DD') AS STR_DATE
                               ,NET_SALES   AS NET_SALES
                               ,RECEIPT_CNT AS RECEIPT_CNT
                               ,0           AS PRE_NET_SALES
                               ,0           AS PRE_RECEIPT_CNT
                        FROM    BASE_TB
                        WHERE   1 = 1
                        AND     BASE_TB.STR_DATE BETWEEN TO_DATE( #{dateStart} , 'YYYY-MM-DD') AND TO_DATE( #{dateEnd} , 'YYYY-MM-DD')
                        UNION ALL
                        /*조회 전주차*/
                        SELECT  BASE_TB.SP_CSTM_ID
                               ,BASE_TB.STORE_ID
                               ,BASE_TB.STORE_NM3
                               ,TO_CHAR(STR_DATE+7,'YYYY-MM-DD') AS STR_DATE
                               ,0           AS NET_SALES
                               ,0           AS RECEIPT_CNT
                               ,NET_SALES   AS PRE_NET_SALES
                               ,RECEIPT_CNT AS PRE_RECEIPT_CNT
                        FROM    BASE_TB
                        WHERE   1 = 1
                        AND     BASE_TB.STR_DATE BETWEEN TO_DATE( #{startDatePre} , 'YYYY-MM-DD') AND TO_DATE( #{endDatePre} , 'YYYY-MM-DD')
                        ) A
                GROUP BY A.SP_CSTM_ID
                        ,A.STR_DATE         
                ORDER BY A.SP_CSTM_ID
                        ,A.STR_DATE    
               ) A  
    </select>
    
    <!-- 메뉴조회 -->
    <select id="getMenuList" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.getMenuList */
        SELECT  SP_CSTM_ID  
               ,MENU_ID     
               ,MENU_NM     
               ,GROUP_1     
               ,GROUP_2     
               ,UPDATE_USER 
               ,UPDATE_DATE 
        FROM   TBL_EXP_STORE_MENU_MASTER
        WHERE  1 = 1
        AND    SP_CSTM_ID = #{sessionVo.spCstmId}
        <if test=" !'ALL'.equals(menuId) and menuId != null and menuId != ''  ">
            AND   MENU_ID  = #{menuId}
        </if>
        <if test=" menuNm != null and menuNm != ''  ">
            AND   MENU_NM  LIKE '%'||#{menuNm}||'%'
        </if>
        <if test=" !'ALL'.equals(group1) and group1 != null and group1 != ''  ">
            AND   GROUP_1  = #{group1}
        </if>
        <if test=" !'ALL'.equals(group2) and group2 != null and group2 != ''  ">
            AND   GROUP_2  = #{group2}
        </if>
        ORDER BY MENU_NM
    </select>
    
    <!-- 매장별 매출 분석- 매출비교 -->
    <select id="getMenuMonthSales" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.getMenuMonthSales */
        WITH BASE_TABLE AS
        (   
            SELECT C.MENU_ID
                  ,C.MENU_NM 
                  ,B.MONTH
                  ,SUM(B.SALES) SALES
            FROM   TBL_EXP_STORE_INFO A
                   JOIN TBL_EXP_STORE_MENU_SALES B
                       ON  1 = 1
                       AND A.SP_CSTM_ID = B.SP_CSTM_ID
                       AND A.STORE_ID   = B.STORE_ID
                       AND B.YEAR       = '2023'
                       --AND B.GROUP_1
                       --AND B.GROUP_1
                       --AND B.MENU_ID
                  JOIN TBL_EXP_STORE_MENU_MASTER C
                       ON  1 = 1
                       AND B.SP_CSTM_ID = C.SP_CSTM_ID
                       AND B.MENU_ID    = C.MENU_ID
                       AND B.GROUP_1    = C.GROUP_1
                       AND B.GROUP_2    = C.GROUP_2
            WHERE  1 = 1
            --AND A.STORE_ID
            --AND    A.REGION'
            --AND    A.SUPERVISOR 
            GROUP BY B.MONTH
                    ,C.MENU_ID
                    ,C.MENU_NM
            ORDER BY B.MONTH
                    ,SUM(B.SALES) DESC
        )
        , 
        MONTH_TABLE AS 
        (
          SELECT '01' AS MONTH FROM DUAL UNION ALL
          SELECT '02' AS MONTH FROM DUAL UNION ALL
          SELECT '03' AS MONTH FROM DUAL UNION ALL
          SELECT '04' AS MONTH FROM DUAL UNION ALL
          SELECT '05' AS MONTH FROM DUAL UNION ALL
          SELECT '06' AS MONTH FROM DUAL UNION ALL
          SELECT '07' AS MONTH FROM DUAL UNION ALL
          SELECT '08' AS MONTH FROM DUAL UNION ALL
          SELECT '09' AS MONTH FROM DUAL UNION ALL
          SELECT '10' AS MONTH FROM DUAL UNION ALL
          SELECT '11' AS MONTH FROM DUAL UNION ALL
          SELECT '12' AS MONTH FROM DUAL
        )
        SELECT A.MONTH ,B.MENU_ID ,B.MENU_NM ,B.SALES 
        FROM   MONTH_TABLE A  LEFT OUTER JOIN BASE_TABLE B ON  1 = 1 AND A.MONTH = B.MONTH 
        WHERE  A.MONTH = '01' 
        AND   ROWNUM <![CDATA[ <= ]]>5 
        UNION ALL
        SELECT A.MONTH ,B.MENU_ID ,B.MENU_NM ,B.SALES 
        FROM   MONTH_TABLE A  LEFT OUTER JOIN BASE_TABLE B ON  1 = 1 AND A.MONTH = B.MONTH 
        WHERE  A.MONTH = '02' 
        AND   ROWNUM <![CDATA[ <= ]]>5 
        UNION ALL
        SELECT A.MONTH ,B.MENU_ID ,B.MENU_NM ,B.SALES 
        FROM   MONTH_TABLE A  LEFT OUTER JOIN BASE_TABLE B ON  1 = 1 AND A.MONTH = B.MONTH 
        WHERE  A.MONTH = '03' 
        AND   ROWNUM <![CDATA[ <= ]]>5 
        UNION ALL
        SELECT A.MONTH ,B.MENU_ID ,B.MENU_NM ,B.SALES 
        FROM   MONTH_TABLE A  LEFT OUTER JOIN BASE_TABLE B ON  1 = 1 AND A.MONTH = B.MONTH 
        WHERE  A.MONTH = '04' 
        AND   ROWNUM <![CDATA[ <= ]]>5 
        UNION ALL
        SELECT A.MONTH ,B.MENU_ID ,B.MENU_NM ,B.SALES 
        FROM   MONTH_TABLE A  LEFT OUTER JOIN BASE_TABLE B ON  1 = 1 AND A.MONTH = B.MONTH 
        WHERE  A.MONTH = '05' 
        AND   ROWNUM <![CDATA[ <= ]]>5 
        UNION ALL
        SELECT A.MONTH ,B.MENU_ID ,B.MENU_NM ,B.SALES 
        FROM   MONTH_TABLE A  LEFT OUTER JOIN BASE_TABLE B ON  1 = 1 AND A.MONTH = B.MONTH 
        WHERE  A.MONTH = '06' 
        AND   ROWNUM <![CDATA[ <= ]]>5 
        UNION ALL
        SELECT A.MONTH ,B.MENU_ID ,B.MENU_NM ,B.SALES 
        FROM   MONTH_TABLE A  LEFT OUTER JOIN BASE_TABLE B ON  1 = 1 AND A.MONTH = B.MONTH 
        WHERE  A.MONTH = '07' 
        AND   ROWNUM <![CDATA[ <= ]]>5 
        UNION ALL
        SELECT A.MONTH ,B.MENU_ID ,B.MENU_NM ,B.SALES 
        FROM   MONTH_TABLE A  LEFT OUTER JOIN BASE_TABLE B ON  1 = 1 AND A.MONTH = B.MONTH 
        WHERE  A.MONTH = '08' 
        AND   ROWNUM <![CDATA[ <= ]]>5 
        UNION ALL
        SELECT A.MONTH ,B.MENU_ID ,B.MENU_NM ,B.SALES 
        FROM   MONTH_TABLE A  LEFT OUTER JOIN BASE_TABLE B ON  1 = 1 AND A.MONTH = B.MONTH 
        WHERE  A.MONTH = '09' 
        AND   ROWNUM <![CDATA[ <= ]]>5 
        UNION ALL
        SELECT A.MONTH ,B.MENU_ID ,B.MENU_NM ,B.SALES 
        FROM   MONTH_TABLE A  LEFT OUTER JOIN BASE_TABLE B ON  1 = 1 AND A.MONTH = B.MONTH 
        WHERE  A.MONTH = '10' 
        AND   ROWNUM <![CDATA[ <= ]]>5 
        UNION ALL
        SELECT A.MONTH ,B.MENU_ID ,B.MENU_NM ,B.SALES 
        FROM   MONTH_TABLE A  LEFT OUTER JOIN BASE_TABLE B ON  1 = 1 AND A.MONTH = B.MONTH 
        WHERE  A.MONTH = '11' 
        AND   ROWNUM <![CDATA[ <= ]]>5 
        UNION ALL
        SELECT A.MONTH ,B.MENU_ID ,B.MENU_NM ,B.SALES 
        FROM   MONTH_TABLE A  LEFT OUTER JOIN BASE_TABLE B ON  1 = 1 AND A.MONTH = B.MONTH 
        WHERE  A.MONTH = '12' 
        AND   ROWNUM <![CDATA[ <= ]]>5 
    </select>
    <select id="getMenuSalesRanking" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.getMenuMonthSalesRanking */
        SELECT C.MENU_ID
              ,C.MENU_NM 
              ,SUM(B.SALES) SALES
        FROM   TBL_EXP_STORE_INFO A
               JOIN TBL_EXP_STORE_MENU_SALES B
                   ON  1 = 1
                   AND A.SP_CSTM_ID = B.SP_CSTM_ID
                   AND A.BRAND_ID   = B.BRAND_ID
                   AND A.STORE_ID   = B.STORE_ID
                   <if test=" !'ALL'.equals(year) and year != null and year != ''  ">
                       AND B.YEAR   = #{year}
                   </if>
                   <if test=" !'ALL'.equals(month) and month != null and month != ''  ">
                       AND B.MONTH  = #{month}
                   </if>
                   <if test=" !'ALL'.equals(group1) and group1 != null and group1 != ''  ">
                       AND B.GROUP_1  = #{group1}
                   </if>
                   <if test=" !'ALL'.equals(group2) and group2 != null and group2 != ''  ">
                       AND B.GROUP_2  = #{group2}
                   </if>
                   <if test=" !'ALL'.equals(menu) and menu != null and menu != ''  ">
                       AND B.MENU_ID  = #{menu}
                   </if>
              JOIN TBL_EXP_STORE_MENU_MASTER C
                   ON  1 = 1
                   AND B.SP_CSTM_ID = C.SP_CSTM_ID
                   AND B.MENU_ID    = C.MENU_ID
                   AND B.GROUP_1    = C.GROUP_1
                   AND B.GROUP_2    = C.GROUP_2
        WHERE  1 = 1 
        AND    A.SP_CSTM_ID = #{sessionVo.spCstmId}
        AND    A.BRAND_ID   = #{brandId}
        <if test=" !'ALL'.equals(store) and store != null and store != ''  ">
            AND    A.STORE_ID   = #{store}
        </if>
        <if test=" !'ALL'.equals(region) and region != null and region != ''  ">
            AND    A.REGION   = #{region}
        </if>
        <if test=" !'ALL'.equals(supervisor) and supervisor != null and supervisor != ''  ">
            AND    A.SUPERVISOR   = #{supervisor}
        </if>
        GROUP BY C.MENU_ID
                ,C.MENU_NM
        ORDER BY SUM(B.SALES) DESC
    </select>

    <select id="getMenuGrp1SalesRanking" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /*  dashboardCorPerformance.getMenuGrp1SalesRanking */
        SELECT C.GROUP_1 
              ,GET_CODE_NM('STORE_MENU_GROUP1',C.GROUP_1) AS GROUP_1_NM
              ,SUM(B.SALES) SALES
        FROM   TBL_EXP_STORE_INFO A
               JOIN TBL_EXP_STORE_MENU_SALES B
                   ON  1 = 1
                   AND A.SP_CSTM_ID = B.SP_CSTM_ID
                   AND A.BRAND_ID   = B.BRAND_ID
                   AND A.STORE_ID   = B.STORE_ID
                   <if test=" !'ALL'.equals(year) and year != null and year != ''  ">
                       AND B.YEAR   = #{year}
                   </if>
                   <if test=" !'ALL'.equals(month) and month != null and month != ''  ">
                       AND B.MONTH   = #{month}
                   </if>
                   <if test=" !'ALL'.equals(group1) and group1 != null and group1 != ''  ">
                       AND B.GROUP_1  = #{group1}
                   </if>
                   <if test=" !'ALL'.equals(group2) and group2 != null and group2 != ''  ">
                       AND B.GROUP_2  = #{group2}
                   </if>
                   <if test=" !'ALL'.equals(menu) and menu != null and menu != ''  ">
                       AND B.MENU_ID  = #{menu}
                   </if>
              JOIN TBL_EXP_STORE_MENU_MASTER C
                   ON  1 = 1
                   AND B.SP_CSTM_ID = C.SP_CSTM_ID
                   AND B.BRAND_ID   = C.BRAND_ID
                   AND B.MENU_ID    = C.MENU_ID
                   AND B.GROUP_1    = C.GROUP_1
                   AND B.GROUP_2    = C.GROUP_2
        WHERE  1 = 1 
        AND    A.SP_CSTM_ID = #{sessionVo.spCstmId}
        AND    A.BRAND_ID   = #{brandId}
        <if test=" !'ALL'.equals(store) and store != null and store != ''  ">
            AND    A.STORE_ID   = #{store}
        </if>
        <if test=" !'ALL'.equals(region) and region != null and region != ''  ">
            AND    A.REGION   = #{region}
        </if>
        <if test=" !'ALL'.equals(supervisor) and supervisor != null and supervisor != ''  ">
            AND    A.SUPERVISOR   = #{supervisor}
        </if>
        GROUP BY C.GROUP_1
        ORDER BY SUM(B.SALES) DESC
    </select>

    <select id="getmenuSalesMonthTop5" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /* dashboardCorPerformance.getmenuSalesMonthTop5 */
        WITH TOP5_MENU AS (
            SELECT  SP_CSTM_ID
                   ,BRAND_ID
                   ,MENU_KEY
                   ,MENU_NM
            FROM   (
                     /* 1    1    1    1    1    1    1    1    */
                     SELECT A.SP_CSTM_ID
                           ,A.BRAND_ID
                           ,C.GROUP_1||'-'||C.GROUP_2||'-'||C.MENU_ID AS MENU_KEY
                           ,C.MENU_NM
                           ,SUM(B.SALES) SALES
                     FROM   TBL_EXP_STORE_INFO A
                            JOIN TBL_EXP_STORE_MENU_SALES B
                                ON  1 = 1
                                AND B.SP_CSTM_ID = #{sessionVo.spCstmId}
                                AND B.BRAND_ID   = #{brandId}
                                AND A.SP_CSTM_ID = B.SP_CSTM_ID
                                AND A.BRAND_ID   = B.BRAND_ID
                                AND A.STORE_ID   = B.STORE_ID                  
                                <if test=" !'ALL'.equals(year) and year != null and year != ''  ">
                                    AND B.YEAR   = #{year}
                                </if>
                                <if test=" !'ALL'.equals(group1) and group1 != null and group1 != ''  ">
                                    AND B.GROUP_1  = #{group1}
                                </if>
                                <if test=" !'ALL'.equals(group2) and group2 != null and group2 != ''  ">
                                    AND B.GROUP_2  = #{group2}
                                </if>
                                <if test=" !'ALL'.equals(menu) and menu != null and menu != ''  ">
                                    AND B.MENU_ID  = #{menu}
                                </if>
                                
                           JOIN TBL_EXP_STORE_MENU_MASTER C
                                ON  1 = 1
                                AND B.SP_CSTM_ID = C.SP_CSTM_ID
                                AND B.BRAND_ID   = C.BRAND_ID
                                AND B.MENU_ID    = C.MENU_ID
                                AND B.GROUP_1    = C.GROUP_1
                                AND B.GROUP_2    = C.GROUP_2
                     WHERE  1 = 1
                     AND    A.SP_CSTM_ID = #{sessionVo.spCstmId}
                     AND    A.BRAND_ID   = #{brandId}
                     <if test=" !'ALL'.equals(store) and store != null and store != ''  ">
                         AND    A.STORE_ID   = #{store}
                     </if>
                     <if test=" !'ALL'.equals(region) and region != null and region != ''  ">
                         AND    A.REGION   = #{region}
                     </if>
                     <if test=" !'ALL'.equals(supervisor) and supervisor != null and supervisor != ''  ">
                         AND    A.SUPERVISOR   = #{supervisor}
                     </if>
                     GROUP BY A.SP_CSTM_ID
                             ,A.BRAND_ID
                             ,C.GROUP_1||'-'||C.GROUP_2||'-'||C.MENU_ID 
                             ,C.MENU_NM
                     ORDER BY SUM(B.SALES) DESC
                     /* 1    1    1    1    1    1    1    1    */
            )
            WHERE  1 =1 
            AND    ROWNUM <![CDATA[<=]]> 5
        )
       , MONTH_MENU AS (
                     SELECT A.SP_CSTM_ID
                           ,A.BRAND_ID
                           ,C.GROUP_1||'-'||C.GROUP_2||'-'||C.MENU_ID AS MENU_KEY
                           ,C.MENU_NM
                           ,B.MONTH
                           ,SUM(B.SALES) SALES
                     FROM   TBL_EXP_STORE_INFO A
                            JOIN TBL_EXP_STORE_MENU_SALES B
                                ON  1 = 1
                                AND A.SP_CSTM_ID = B.SP_CSTM_ID
                                AND A.BRAND_ID   = B.BRAND_ID
                                AND A.STORE_ID   = B.STORE_ID
                                <if test=" !'ALL'.equals(year) and year != null and year != ''  ">
                                    AND B.YEAR   = #{year}
                                </if>
                           JOIN TBL_EXP_STORE_MENU_MASTER C
                                ON  1 = 1
                                AND B.SP_CSTM_ID = C.SP_CSTM_ID
                                AND B.BRAND_ID   = C.BRAND_ID
                                AND B.MENU_ID    = C.MENU_ID
                                AND B.GROUP_1    = C.GROUP_1
                                AND B.GROUP_2    = C.GROUP_2
                     WHERE  1 = 1
                     AND    A.SP_CSTM_ID = #{sessionVo.spCstmId}
                     AND    A.BRAND_ID   = #{brandId}
                     
                     <if test=" !'ALL'.equals(store) and store != null and store != ''  ">
                         AND    A.STORE_ID   = #{store}
                     </if>
                     <if test=" !'ALL'.equals(region) and region != null and region != ''  ">
                         AND    A.REGION   = #{region}
                     </if>
                     <if test=" !'ALL'.equals(supervisor) and supervisor != null and supervisor != ''  ">
                         AND    A.SUPERVISOR   = #{supervisor}
                     </if>
                     GROUP BY A.SP_CSTM_ID
                             ,A.BRAND_ID
                             ,C.GROUP_1||'-'||C.GROUP_2||'-'||C.MENU_ID
                             ,C.MENU_NM
                             ,B.MONTH
                     ORDER BY  B.MONTH
                              ,SUM(B.SALES) DESC
       )
        SELECT A.SP_CSTM_ID
              ,A.BRAND_ID
              ,A.MENU_KEY
              ,A.MENU_NM
              ,A.MONTH
              ,A.SALES
        FROM   MONTH_MENU A
               JOIN TOP5_MENU B
                 ON  1 = 1
                 AND A.SP_CSTM_ID = B.SP_CSTM_ID
                 AND A.BRAND_ID   = B.BRAND_ID
                 AND A.MENU_KEY   = B.MENU_KEY
    </select>   
    
    <select id="getmenuSalesDayTop5" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /* dashboardCorPerformance.getmenuSalesDayTop5 */
        WITH TOP5_MENU AS (
            SELECT  SP_CSTM_ID
                   ,BRAND_ID
                   ,MENU_KEY
                   ,MENU_NM
            FROM   (
                     /* 1    1    1    1    1    1    1    1    */
                     SELECT A.SP_CSTM_ID
                           ,A.BRAND_ID
                           ,C.GROUP_1||'-'||C.GROUP_2||'-'||C.MENU_ID AS MENU_KEY
                           ,C.MENU_NM
                           ,B.MONTH
                           ,SUM(B.SALES) SALES
                     FROM   TBL_EXP_STORE_INFO A
                            JOIN TBL_EXP_STORE_MENU_SALES B
                                ON  1 = 1
                                AND B.SP_CSTM_ID = #{sessionVo.spCstmId}
                                AND B.BRAND_ID   = #{brandId}
                                AND A.SP_CSTM_ID = B.SP_CSTM_ID
                                AND A.BRAND_ID   = B.BRAND_ID
                                AND A.STORE_ID   = B.STORE_ID
                                <if test=" !'ALL'.equals(year) and year != null and year != ''  ">
                                    AND B.YEAR   = #{year}
                                </if>
                                <if test=" !'ALL'.equals(month) and month != null and month != ''  ">
                                    AND B.MONTH   = #{month}
                                </if>
                                <if test=" !'ALL'.equals(group1) and group1 != null and group1 != ''  ">
                                    AND B.GROUP_1  = #{group1}
                                </if>
                                <if test=" !'ALL'.equals(group2) and group2 != null and group2 != ''  ">
                                    AND B.GROUP_2  = #{group2}
                                </if>
                                <if test=" !'ALL'.equals(menu) and menu != null and menu != ''  ">
                                    AND B.MENU_ID  = #{menu}
                                </if>
                           JOIN TBL_EXP_STORE_MENU_MASTER C
                                ON  1 = 1
                                AND B.SP_CSTM_ID = C.SP_CSTM_ID
                                AND B.BRAND_ID   = C.BRAND_ID
                                AND B.MENU_ID    = C.MENU_ID
                                AND B.GROUP_1    = C.GROUP_1
                                AND B.GROUP_2    = C.GROUP_2
                     WHERE  1 = 1
                     AND    A.SP_CSTM_ID = #{sessionVo.spCstmId}
                     AND    A.BRAND_ID   = #{brandId}
                     <if test=" !'ALL'.equals(store) and store != null and store != ''  ">
                         AND    A.STORE_ID   = #{store}
                     </if>
                     <if test=" !'ALL'.equals(region) and region != null and region != ''  ">
                         AND    A.REGION   = #{region}
                     </if>
                     <if test=" !'ALL'.equals(supervisor) and supervisor != null and supervisor != ''  ">
                         AND    A.SUPERVISOR   = #{supervisor}
                     </if>
                     GROUP BY A.SP_CSTM_ID
                             ,A.BRAND_ID
                             ,C.GROUP_1||'-'||C.GROUP_2||'-'||C.MENU_ID 
                             ,C.MENU_NM
                             ,B.MONTH
                     ORDER BY SUM(B.SALES) DESC
                     /* 1    1    1    1    1    1    1    1    */
            )
            WHERE  1 =1 
            AND    ROWNUM  <![CDATA[<=]]>  5
        )
       , DAY_MENU AS (
                     SELECT A.SP_CSTM_ID
                           ,A.BRAND_ID
                           ,C.GROUP_1||'-'||C.GROUP_2||'-'||C.MENU_ID AS MENU_KEY
                           ,C.MENU_NM
                           ,B.MONTH
                           ,B.DAY
                           ,SUM(B.SALES) SALES
                     FROM   TBL_EXP_STORE_INFO A
                            JOIN TBL_EXP_STORE_MENU_SALES B
                                ON  1 = 1
                                AND A.SP_CSTM_ID = B.SP_CSTM_ID
                                AND A.BRAND_ID   = B.BRAND_ID
                                AND A.STORE_ID   = B.STORE_ID
                                <if test=" !'ALL'.equals(year) and year != null and year != ''  ">
                                    AND B.YEAR   = #{year}
                                </if>
                                <if test=" !'ALL'.equals(month) and month != null and month != ''  ">
                                    AND B.MONTH   = #{month}
                                </if>
                                <if test=" !'ALL'.equals(group1) and group1 != null and group1 != ''  ">
                                    AND B.GROUP_1  = #{group1}
                                </if>
                                <if test=" !'ALL'.equals(group2) and group2 != null and group2 != ''  ">
                                    AND B.GROUP_2  = #{group2}
                                </if>
                                <if test=" !'ALL'.equals(menu) and menu != null and menu != ''  ">
                                    AND B.MENU_ID  = #{menu}
                                </if>
                           JOIN TBL_EXP_STORE_MENU_MASTER C
                                ON  1 = 1
                                AND B.SP_CSTM_ID = C.SP_CSTM_ID
                                AND B.BRAND_ID   = C.BRAND_ID
                                AND B.MENU_ID    = C.MENU_ID
                                AND B.GROUP_1    = C.GROUP_1
                                AND B.GROUP_2    = C.GROUP_2
                     WHERE  1 = 1
                     AND    A.SP_CSTM_ID = #{sessionVo.spCstmId}
                     AND    A.BRAND_ID   = #{brandId}
                     <if test=" !'ALL'.equals(store) and store != null and store != ''  ">
                         AND    A.STORE_ID   = #{store}
                     </if>
                     <if test=" !'ALL'.equals(region) and region != null and region != ''  ">
                         AND    A.REGION   = #{region}
                     </if>
                     <if test=" !'ALL'.equals(supervisor) and supervisor != null and supervisor != ''  ">
                         AND    A.SUPERVISOR   = #{supervisor}
                     </if>
                     GROUP BY A.SP_CSTM_ID
                             ,A.BRAND_ID
                             ,C.GROUP_1||'-'||C.GROUP_2||'-'||C.MENU_ID
                             ,C.MENU_NM
                             ,B.MONTH
                             ,B.DAY
                     ORDER BY  B.MONTH
                              ,B.DAY
                              ,SUM(B.SALES) DESC
       )
        SELECT A.SP_CSTM_ID
              ,A.BRAND_ID
              ,A.MENU_KEY
              ,A.MENU_NM
              ,A.MONTH
              ,A.DAY
              ,A.SALES
        FROM   DAY_MENU A
               JOIN TOP5_MENU B
                 ON  1 = 1
                 AND A.SP_CSTM_ID = B.SP_CSTM_ID
                 AND A.BRAND_ID   = B.BRAND_ID
                 AND A.MENU_KEY   = B.MENU_KEY
    </select>    
    
    <select id="getmenuMarginMonthTop5" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /* dashboardCorPerformance.getmenuMarginMonthTop5 */
                WITH BASE_TABLE AS (
                          /*==== 기본 데이타    기본 데이타    기본 데이타    기본 데이타    기본 데이타    기본 데이타    ====*/
                          SELECT A.SP_CSTM_ID 
                                ,A.BRAND_ID      
                                ,A.MONTH   
                                ,A.MENU_KEY   
                                ,A.MENU_NM      
                                ,A.SALES      
                                ,B.MARGIN
                                ,CASE WHEN B.MARGIN != 0 THEN ROUND(A.SALES * B.MARGIN)
                                      ELSE 0
                                 END AS SALES_MARGIN
                          FROM   (
                                      /* 메뉴별 월 판매금액 */
                                     SELECT A.SP_CSTM_ID
                                           ,A.BRAND_ID
                                           ,C.GROUP_1||'-'||C.GROUP_2||'-'||C.MENU_ID AS MENU_KEY
                                           ,C.MENU_NM
                                           ,B.MONTH
                                           ,SUM(B.SALES) SALES
                                     FROM   TBL_EXP_STORE_INFO A
                                            JOIN TBL_EXP_STORE_MENU_SALES B
                                                ON  1 = 1
                                                AND A.SP_CSTM_ID = B.SP_CSTM_ID
                                                AND A.BRAND_ID   = B.BRAND_ID
                                                AND A.STORE_ID   = B.STORE_ID
                                                <if test=" !'ALL'.equals(year) and year != null and year != ''  ">
                                                    AND B.YEAR   = #{year}
                                                </if>
                                           JOIN TBL_EXP_STORE_MENU_MASTER C
                                                ON  1 = 1
                                                AND B.SP_CSTM_ID = C.SP_CSTM_ID
                                                AND B.BRAND_ID   = C.BRAND_ID
                                                AND B.MENU_ID    = C.MENU_ID
                                                AND B.GROUP_1    = C.GROUP_1
                                                AND B.GROUP_2    = C.GROUP_2
                                     WHERE  1 = 1
                                     AND    A.SP_CSTM_ID = #{sessionVo.spCstmId}
                                     AND    A.BRAND_ID   = #{brandId}
                                      <if test=" !'ALL'.equals(store) and store != null and store != ''  ">
                                          AND    A.STORE_ID   = #{store}
                                      </if>
                                      <if test=" !'ALL'.equals(region) and region != null and region != ''  ">
                                          AND    A.REGION   = #{region}
                                      </if>
                                      <if test=" !'ALL'.equals(supervisor) and supervisor != null and supervisor != ''  ">
                                          AND    A.SUPERVISOR   = #{supervisor}
                                      </if>
                                     GROUP BY A.SP_CSTM_ID
                                             ,A.BRAND_ID
                                             ,C.GROUP_1||'-'||C.GROUP_2||'-'||C.MENU_ID
                                             ,C.MENU_NM
                                             ,B.MONTH
                                     ORDER BY  B.MONTH
                                              ,SUM(B.SALES) DESC
                                 )  A
                                 JOIN (
                                     /* 메뉴,월별 마진율 */
                                     SELECT   A.SP_CSTM_ID    
                                             ,A.BRAND_ID      
                                             ,A.YEAR          
                                             ,A.MONTH    
                                             ,A.GROUP_1||'-'||A.GROUP_2||'-'||A.MENU_ID AS MENU_KEY
                                             ,A.COST_PRICE    
                                             ,A.SELLING_PRICE 
                                             ,CASE WHEN A.SELLING_PRICE_NVL != 0 THEN 1 - (A.COST_PRICE/A.SELLING_PRICE)
                                                   ELSE 0
                                                 END AS MARGIN
                                                 
                                     FROM   (
                                             SELECT   A.SP_CSTM_ID    
                                                     ,A.BRAND_ID      
                                                     ,A.MENU_ID       
                                                     ,A.YEAR          
                                                     ,A.GROUP_1       
                                                     ,A.GROUP_2       
                                                     ,A.MONTH         
                                                     ,A.COST_PRICE    
                                                     ,A.SELLING_PRICE 
                                                     ,NVL(A.SELLING_PRICE, 0) AS SELLING_PRICE_NVL
                                             FROM   TBL_EXP_STORE_MENU_PRICE A
                                             WHERE  1 = 1
                                             <if test=" !'ALL'.equals(year) and year != null and year != ''  ">
                                                 AND A.YEAR   = #{year}
                                             </if>
                                             <if test=" !'ALL'.equals(month) and month != null and month != ''  ">
                                                 AND A.MONTH   = #{month}
                                             </if>
                                             <if test=" !'ALL'.equals(group1) and group1 != null and group1 != ''  ">
                                                 AND A.GROUP_1  = #{group1}
                                             </if>
                                             <if test=" !'ALL'.equals(group2) and group2 != null and group2 != ''  ">
                                                 AND A.GROUP_2  = #{group2}
                                             </if>
                                             <if test=" !'ALL'.equals(menu) and menu != null and menu != ''  ">
                                                 AND A.MENU_ID  = #{menu}
                                             </if>
                                             ) A
                                 )  B
                                 ON  1 = 1
                                 AND    B.MARGIN != 0
                                 AND    A.SP_CSTM_ID  = B.SP_CSTM_ID
                                 AND    A.BRAND_ID    = B.BRAND_ID
                                 AND    A.MENU_KEY    = B.MENU_KEY
                                 AND    A.MONTH       = B.MONTH
                          WHERE  1 = 1
                          /*#### 기본 데이타    기본 데이타    기본 데이타    기본 데이타    기본 데이타    기본 데이타    ####*/
                )
                SELECT A.SP_CSTM_ID
                      ,A.BRAND_ID
                      ,A.MENU_KEY
                      ,A.MENU_NM
                      ,B.MONTH
                      ,B.SALES_MARGIN AS SALES
                FROM   (
                        SELECT A.SP_CSTM_ID
                              ,A.BRAND_ID
                              ,A.MENU_KEY
                              ,A.MENU_NM
                        FROM   (
                                SELECT BASE_TABLE.SP_CSTM_ID 
                                      ,BASE_TABLE.BRAND_ID
                                      ,BASE_TABLE.MENU_KEY   
                                      ,BASE_TABLE.MENU_NM 
                                      ,SUM(BASE_TABLE.SALES_MARGIN)
                                FROM   BASE_TABLE
                                GROUP BY BASE_TABLE.SP_CSTM_ID 
                                        ,BASE_TABLE.BRAND_ID
                                        ,BASE_TABLE.MENU_KEY   
                                        ,BASE_TABLE.MENU_NM  
                                ORDER BY SUM(BASE_TABLE.SALES_MARGIN) DESC
                        ) A
                        WHERE 1 = 1
                        AND   ROWNUM <![CDATA[<=]]> 5
                      ) A
                      JOIN BASE_TABLE B
                          ON  1 = 1
                          AND  A.SP_CSTM_ID = A.SP_CSTM_ID
                          AND  A.BRAND_ID   = B.BRAND_ID
                          AND  A.MENU_KEY   = B.MENU_KEY
                
    </select>  

    <select id="getmenuMarginDayTop5" resultType="java.util.HashMap" flushCache="true"  useCache="false">
                /* dashboardCorPerformance.getmenuMarginDayTop5 */
                WITH BASE_TABLE AS (
                          /*==== 기본 데이타    기본 데이타    기본 데이타    기본 데이타    기본 데이타    기본 데이타    ====*/
                          SELECT A.SP_CSTM_ID 
                                ,A.BRAND_ID      
                                ,A.MONTH        
                                ,A.DAY   
                                ,A.MENU_KEY   
                                ,A.MENU_NM      
                                ,A.SALES      
                                ,B.MARGIN
                                ,CASE WHEN B.MARGIN != 0 THEN ROUND(A.SALES * B.MARGIN)
                                      ELSE 0
                                 END AS SALES_MARGIN
                          FROM   (
                                      /* 메뉴별 월 판매금액 */
                                     SELECT A.SP_CSTM_ID
                                           ,A.BRAND_ID
                                           ,C.GROUP_1||'-'||C.GROUP_2||'-'||C.MENU_ID AS MENU_KEY
                                           ,C.MENU_NM
                                           ,B.MONTH
                                           ,B.DAY
                                           ,SUM(B.SALES) SALES
                                     FROM   TBL_EXP_STORE_INFO A
                                            JOIN TBL_EXP_STORE_MENU_SALES B
                                                ON  1 = 1
                                                AND A.SP_CSTM_ID = B.SP_CSTM_ID
                                                AND A.BRAND_ID   = B.BRAND_ID
                                                AND A.STORE_ID   = B.STORE_ID
                                                <if test=" !'ALL'.equals(year) and year != null and year != ''  ">
                                                    AND B.YEAR   = #{year}
                                                </if>
                                                <if test=" !'ALL'.equals(year) and year != null and year != ''  ">
                                                    AND B.MONTH   = #{month}
                                                </if>
                                           JOIN TBL_EXP_STORE_MENU_MASTER C
                                                ON  1 = 1
                                                AND B.SP_CSTM_ID = C.SP_CSTM_ID
                                                AND A.BRAND_ID   = B.BRAND_ID
                                                AND B.MENU_ID    = C.MENU_ID
                                                AND B.GROUP_1    = C.GROUP_1
                                                AND B.GROUP_2    = C.GROUP_2
                                     WHERE  1 = 1
                                     AND    A.SP_CSTM_ID = #{sessionVo.spCstmId}
                                     AND    A.BRAND_ID   = #{brandId}
                                      <if test=" !'ALL'.equals(store) and store != null and store != ''  ">
                                          AND    A.STORE_ID   = #{store}
                                      </if>
                                      <if test=" !'ALL'.equals(region) and region != null and region != ''  ">
                                          AND    A.REGION   = #{region}
                                      </if>
                                      <if test=" !'ALL'.equals(supervisor) and supervisor != null and supervisor != ''  ">
                                          AND    A.SUPERVISOR   = #{supervisor}
                                      </if>
                                     GROUP BY A.SP_CSTM_ID
                                             ,A.BRAND_ID
                                             ,C.GROUP_1||'-'||C.GROUP_2||'-'||C.MENU_ID
                                             ,C.MENU_NM
                                             ,B.MONTH
                                             ,B.DAY
                                     ORDER BY  B.MONTH
                                              ,B.DAY
                                              ,SUM(B.SALES) DESC
                                 )  A
                                 JOIN (
                                     /* 메뉴, 월별 마진율 */
                                     SELECT   A.SP_CSTM_ID    
                                             ,A.BRAND_ID      
                                             ,A.YEAR          
                                             ,A.MONTH    
                                             ,A.GROUP_1||'-'||A.GROUP_2||'-'||A.MENU_ID AS MENU_KEY
                                             ,A.COST_PRICE    
                                             ,A.SELLING_PRICE 
                                             ,CASE WHEN A.SELLING_PRICE_NVL != 0 THEN 1 - (A.COST_PRICE/A.SELLING_PRICE)
                                                   ELSE 0
                                                 END AS MARGIN

                                     FROM   (
                                             SELECT   A.SP_CSTM_ID    
                                                     ,A.BRAND_ID      
                                                     ,A.MENU_ID       
                                                     ,A.YEAR          
                                                     ,A.GROUP_1       
                                                     ,A.GROUP_2       
                                                     ,A.MONTH         
                                                     ,A.COST_PRICE    
                                                     ,A.SELLING_PRICE 
                                                     ,NVL(A.SELLING_PRICE, 0) AS SELLING_PRICE_NVL
                                             FROM   TBL_EXP_STORE_MENU_PRICE A
                                             WHERE  1 = 1
                                             AND    A.BRAND_ID   = #{brandId}
                                             <if test=" !'ALL'.equals(year) and year != null and year != ''  ">
                                                 AND A.YEAR   = #{year}
                                             </if>
                                             <if test=" !'ALL'.equals(month) and month != null and month != ''  ">
                                                 AND A.MONTH   = #{month}
                                             </if>
                                             <if test=" !'ALL'.equals(group1) and group1 != null and group1 != ''  ">
                                                 AND A.GROUP_1  = #{group1}
                                             </if>
                                             <if test=" !'ALL'.equals(group2) and group2 != null and group2 != ''  ">
                                                 AND A.GROUP_2  = #{group2}
                                             </if>
                                             <if test=" !'ALL'.equals(menu) and menu != null and menu != ''  ">
                                                 AND A.MENU_ID  = #{menu}
                                             </if>
                                             ) A
                                 )  B
                                 ON  1 = 1
                                 AND    B.MARGIN != 0
                                 AND    A.SP_CSTM_ID  = B.SP_CSTM_ID
                                 AND    A.BRAND_ID    = B.BRAND_ID
                                 AND    A.MENU_KEY    = B.MENU_KEY
                                 AND    A.MONTH       = B.MONTH
                          WHERE  1 = 1
                          /*#### 기본 데이타    기본 데이타    기본 데이타    기본 데이타    기본 데이타    기본 데이타    ####*/
                )
                SELECT A.SP_CSTM_ID
                      ,A.BRAND_ID
                      ,A.MENU_KEY
                      ,A.MENU_NM
                      ,B.MONTH
                      ,B.DAY
                      ,B.SALES_MARGIN AS SALES
                FROM   (
                        SELECT A.SP_CSTM_ID
                              ,A.BRAND_ID
                              ,A.MENU_KEY
                              ,A.MENU_NM
                        FROM   (
                                SELECT BASE_TABLE.SP_CSTM_ID 
                                      ,BASE_TABLE.BRAND_ID
                                      ,BASE_TABLE.MENU_KEY   
                                      ,BASE_TABLE.MENU_NM 
                                      ,SUM(BASE_TABLE.SALES_MARGIN)
                                FROM   BASE_TABLE
                                GROUP BY BASE_TABLE.SP_CSTM_ID 
                                        ,BASE_TABLE.BRAND_ID
                                        ,BASE_TABLE.MENU_KEY   
                                        ,BASE_TABLE.MENU_NM  
                                ORDER BY SUM(BASE_TABLE.SALES_MARGIN) DESC
                        ) A
                        WHERE 1 = 1
                        AND   ROWNUM  <![CDATA[<=]]>  5
                      ) A
                      JOIN BASE_TABLE B
                          ON  1 = 1
                          AND  A.SP_CSTM_ID = A.SP_CSTM_ID
                          AND  A.BRAND_ID   = B.BRAND_ID
                          AND  A.MENU_KEY   = B.MENU_KEY
                WHERE  1 = 1
                ORDER BY B.MONTH
                        ,B.DAY
    </select>  
    
    <select id="getmenuMarginRanking" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /* dashboardCorPerformance.getmenuMarginRanking */
                WITH BASE_TABLE AS (
                          /*==== 기본 데이타    기본 데이타    기본 데이타    기본 데이타    기본 데이타    기본 데이타    ====*/
                          SELECT A.SP_CSTM_ID 
                                ,A.BRAND_ID      
                                ,A.MONTH   
                                ,A.MENU_KEY   
                                ,A.MENU_NM      
                                ,A.SALES      
                                ,B.MARGIN
                                ,CASE WHEN B.MARGIN != 0 THEN ROUND(A.SALES * B.MARGIN)
                                      ELSE 0
                                 END AS SALES_MARGIN
                          FROM   (
                                      /* 메뉴별 월 판매금액 */
                                     SELECT A.SP_CSTM_ID
                                           ,A.BRAND_ID
                                           ,C.GROUP_1||'-'||C.GROUP_2||'-'||C.MENU_ID AS MENU_KEY
                                           ,C.MENU_NM
                                           ,B.MONTH
                                           ,SUM(B.SALES) SALES
                                     FROM   TBL_EXP_STORE_INFO A
                                            JOIN TBL_EXP_STORE_MENU_SALES B
                                                ON  1 = 1
                                                AND A.SP_CSTM_ID = B.SP_CSTM_ID
                                                AND A.BRAND_ID   = B.BRAND_ID
                                                AND A.STORE_ID   = B.STORE_ID
                                                <if test=" !'ALL'.equals(year) and year != null and year != ''  ">
                                                    AND B.YEAR   = #{year}
                                                </if>
                                                <if test=" !'ALL'.equals(month) and month != null and month != ''  ">
                                                    AND B.MONTH   = #{month}
                                                </if>
                                           JOIN TBL_EXP_STORE_MENU_MASTER C
                                                ON  1 = 1
                                                AND B.SP_CSTM_ID = C.SP_CSTM_ID
                                                AND B.BRAND_ID   = C.BRAND_ID
                                                AND B.MENU_ID    = C.MENU_ID
                                                AND B.GROUP_1    = C.GROUP_1
                                                AND B.GROUP_2    = C.GROUP_2
                                     WHERE  1 = 1
                                     AND    A.SP_CSTM_ID = #{sessionVo.spCstmId}
                                     AND    A.BRAND_ID   = #{brandId}
                                     <if test=" !'ALL'.equals(store) and store != null and store != ''  ">
                                         AND    A.STORE_ID   = #{store}
                                     </if>
                                     <if test=" !'ALL'.equals(region) and region != null and region != ''  ">
                                         AND    A.REGION   = #{region}
                                     </if>
                                     <if test=" !'ALL'.equals(supervisor) and supervisor != null and supervisor != ''  ">
                                         AND    A.SUPERVISOR   = #{supervisor}
                                     </if>
                                     GROUP BY A.SP_CSTM_ID
                                             ,A.BRAND_ID
                                             ,C.GROUP_1||'-'||C.GROUP_2||'-'||C.MENU_ID
                                             ,C.MENU_NM
                                             ,B.MONTH
                                     ORDER BY  B.MONTH
                                              ,SUM(B.SALES) DESC
                                 )  A
                                 JOIN (
                                     /* 메뉴,월별 마진율 */
                                     SELECT   A.SP_CSTM_ID    
                                             ,A.BRAND_ID      
                                             ,A.YEAR          
                                             ,A.MONTH    
                                             ,A.GROUP_1||'-'||A.GROUP_2||'-'||A.MENU_ID AS MENU_KEY
                                             ,A.COST_PRICE    
                                             ,A.SELLING_PRICE 
                                             ,CASE WHEN A.SELLING_PRICE_NVL != 0 THEN 1 - (A.COST_PRICE/A.SELLING_PRICE)
                                                   ELSE 0
                                                 END AS MARGIN

                                     FROM   (
                                             SELECT   A.SP_CSTM_ID    
                                                     ,A.BRAND_ID      
                                                     ,A.MENU_ID       
                                                     ,A.YEAR          
                                                     ,A.GROUP_1       
                                                     ,A.GROUP_2       
                                                     ,A.MONTH         
                                                     ,A.COST_PRICE    
                                                     ,A.SELLING_PRICE 
                                                     ,NVL(A.SELLING_PRICE, 0) AS SELLING_PRICE_NVL
                                             FROM   TBL_EXP_STORE_MENU_PRICE A
                                             WHERE  1 = 1
                                             AND    A.BRAND_ID   = #{brandId}
                                             <if test=" !'ALL'.equals(year) and year != null and year != ''  ">
                                                 AND A.YEAR   = #{year}
                                             </if>
                                             <if test=" !'ALL'.equals(month) and month != null and month != ''  ">
                                                 AND A.MONTH   = #{month}
                                             </if>
                                             <if test=" !'ALL'.equals(group1) and group1 != null and group1 != ''  ">
                                                 AND A.GROUP_1  = #{group1}
                                             </if>
                                             <if test=" !'ALL'.equals(group2) and group2 != null and group2 != ''  ">
                                                 AND A.GROUP_2  = #{group2}
                                             </if>
                                             <if test=" !'ALL'.equals(menu) and menu != null and menu != ''  ">
                                                 AND A.MENU_ID  = #{menu}
                                             </if>
                                             ) A
                                 )  B
                                 ON  1 = 1
                                 AND    B.MARGIN != 0
                                 AND    A.SP_CSTM_ID  = B.SP_CSTM_ID
                                 AND    A.BRAND_ID    = B.BRAND_ID
                                 AND    A.MENU_KEY    = B.MENU_KEY
                                 AND    A.MONTH       = B.MONTH
                          WHERE  1 = 1
                          /*#### 기본 데이타    기본 데이타    기본 데이타    기본 데이타    기본 데이타    기본 데이타    ####*/
                )
                SELECT A.SP_CSTM_ID
                      ,A.BRAND_ID
                      ,A.MENU_KEY
                      ,A.MENU_NM
                      ,SUM(B.SALES_MARGIN) AS MARGIN
                FROM   (
                        SELECT A.SP_CSTM_ID
                              ,A.BRAND_ID
                              ,A.MENU_KEY
                              ,A.MENU_NM
                        FROM   (
                                SELECT BASE_TABLE.SP_CSTM_ID 
                                      ,BASE_TABLE.BRAND_ID
                                      ,BASE_TABLE.MENU_KEY   
                                      ,BASE_TABLE.MENU_NM 
                                      ,SUM(BASE_TABLE.SALES_MARGIN)
                                FROM   BASE_TABLE
                                GROUP BY BASE_TABLE.SP_CSTM_ID 
                                        ,BASE_TABLE.BRAND_ID
                                        ,BASE_TABLE.MENU_KEY   
                                        ,BASE_TABLE.MENU_NM  
                        ) A
                        WHERE 1 = 1
                      ) A
                      JOIN BASE_TABLE B
                          ON  1 = 1
                          AND  A.SP_CSTM_ID = B.SP_CSTM_ID
                          AND  A.BRAND_ID   = B.BRAND_ID
                          AND  A.MENU_KEY   = B.MENU_KEY
                GROUP BY A.SP_CSTM_ID
                        ,A.BRAND_ID
                        ,A.MENU_KEY
                        ,A.MENU_NM
                ORDER BY SUM(B.SALES_MARGIN) DESC 
    </select>
    
    <select id="getMenuMonthCostRanking" resultType="java.util.HashMap" flushCache="true"  useCache="false">
                /* dashboardCorPerformance.getMenuMonthCostRanking */
                WITH BASE_TABLE AS (
                          /*==== 기본 데이타    기본 데이타    기본 데이타    기본 데이타    기본 데이타    기본 데이타    ====*/
                          SELECT A.SP_CSTM_ID 
                                ,A.BRAND_ID      
                                ,A.MONTH   
                                ,A.MENU_KEY   
                                ,A.MENU_NM      
                                ,A.SALES    
                                ,B.COST_RATIO
                                ,ROUND(A.SALES * B.COST_RATIO) as COST
                                ,B.COST_PRICE 
                                ,B.SELLING_PRICE
                          FROM   (
                                      /* 메뉴별 월 판매금액 */
                                     SELECT A.SP_CSTM_ID
                                           ,A.BRAND_ID
                                           ,C.GROUP_1||'-'||C.GROUP_2||'-'||C.MENU_ID AS MENU_KEY
                                           ,C.MENU_NM
                                           ,B.MONTH
                                           ,SUM(B.SALES) SALES
                                     FROM   TBL_EXP_STORE_INFO A
                                            JOIN TBL_EXP_STORE_MENU_SALES B
                                                ON  1 = 1
                                                AND A.SP_CSTM_ID = B.SP_CSTM_ID
                                                AND A.BRAND_ID   = B.BRAND_ID
                                                AND A.STORE_ID   = B.STORE_ID
                                                <if test=" !'ALL'.equals(year) and year != null and year != ''  ">
                                                    AND B.YEAR   = #{year}
                                                </if>
                                                <if test=" !'ALL'.equals(month) and month != null and month != ''  ">
                                                    AND B.MONTH   = #{month}
                                                </if>
                                           JOIN TBL_EXP_STORE_MENU_MASTER C
                                                ON  1 = 1
                                                AND B.SP_CSTM_ID = C.SP_CSTM_ID
                                                AND B.BRAND_ID   = C.BRAND_ID
                                                AND B.MENU_ID    = C.MENU_ID
                                                AND B.GROUP_1    = C.GROUP_1
                                                AND B.GROUP_2    = C.GROUP_2
                                     WHERE  1 = 1
                                     AND    A.SP_CSTM_ID = #{sessionVo.spCstmId}
                                     AND    A.BRAND_ID   = #{brandId}
                                     <if test=" !'ALL'.equals(store) and store != null and store != ''  ">
                                         AND    A.STORE_ID   = #{store}
                                     </if>
                                     <if test=" !'ALL'.equals(region) and region != null and region != ''  ">
                                         AND    A.REGION   = #{region}
                                     </if>
                                     <if test=" !'ALL'.equals(supervisor) and supervisor != null and supervisor != ''  ">
                                         AND    A.SUPERVISOR   = #{supervisor}
                                     </if>
                                     GROUP BY A.SP_CSTM_ID
                                             ,A.BRAND_ID
                                             ,C.GROUP_1||'-'||C.GROUP_2||'-'||C.MENU_ID
                                             ,C.MENU_NM
                                             ,B.MONTH
                                     ORDER BY  B.MONTH
                                              ,SUM(B.SALES) DESC
                                 )  A
                                 JOIN (
                                     /* 메뉴,월별 코드스비용 */
                                     SELECT   A.SP_CSTM_ID    
                                             ,A.BRAND_ID      
                                             ,A.YEAR          
                                             ,A.MONTH    
                                             ,A.GROUP_1||'-'||A.GROUP_2||'-'||A.MENU_ID AS MENU_KEY
                                             ,A.COST_PRICE    
                                             ,A.SELLING_PRICE 
                                             ,(A.COST_PRICE /A.SELLING_PRICE) AS COST_RATIO
                                     FROM   (
                                             SELECT   A.SP_CSTM_ID    
                                                     ,A.BRAND_ID      
                                                     ,A.MENU_ID       
                                                     ,A.YEAR          
                                                     ,A.GROUP_1       
                                                     ,A.GROUP_2       
                                                     ,A.MONTH         
                                                     ,NVL(A.SELLING_PRICE, 0) AS SELLING_PRICE   
                                                     ,NVL(A.COST_PRICE, 0)    AS COST_PRICE
                                             FROM   TBL_EXP_STORE_MENU_PRICE A
                                             WHERE  1 = 1
                                             AND    A.BRAND_ID   = #{brandId}
                                             <if test=" !'ALL'.equals(year) and year != null and year != ''  ">
                                                 AND A.YEAR   = #{year}
                                             </if>
                                             <if test=" !'ALL'.equals(month) and month != null and month != ''  ">
                                                 AND A.MONTH   = #{month}
                                             </if>
                                             <if test=" !'ALL'.equals(group1) and group1 != null and group1 != ''  ">
                                                 AND A.GROUP_1  = #{group1}
                                             </if>
                                             <if test=" !'ALL'.equals(group2) and group2 != null and group2 != ''  ">
                                                 AND A.GROUP_2  = #{group2}
                                             </if>
                                             <if test=" !'ALL'.equals(menu) and menu != null and menu != ''  ">
                                                 AND A.MENU_ID  = #{menu}
                                             </if>
                                             ) A
                                     WHERE  1 = 1
                                     AND    A.SELLING_PRICE != 0
                                 )  B
                                 ON  1 = 1
                                 AND    A.SP_CSTM_ID  = B.SP_CSTM_ID
                                 AND    A.BRAND_ID    = B.BRAND_ID
                                 AND    A.MENU_KEY    = B.MENU_KEY
                                 AND    A.MONTH       = B.MONTH
                          WHERE  1 = 1
                          /*#### 기본 데이타    기본 데이타    기본 데이타    기본 데이타    기본 데이타    기본 데이타    ####*/
                )
                SELECT BASE_TABLE.SP_CSTM_ID 
                      ,BASE_TABLE.BRAND_ID
                      ,BASE_TABLE.MENU_KEY   
                      ,BASE_TABLE.MENU_NM
                      ,SUM(BASE_TABLE.COST) AS   COST_PRICE 
                      ,ROUND((SUM(BASE_TABLE.COST_PRICE) * 100 / SUM(BASE_TABLE.SELLING_PRICE))) AS COST_RATIO
                FROM   BASE_TABLE
                WHERE  1 = 1
                GROUP BY BASE_TABLE.SP_CSTM_ID 
                      ,BASE_TABLE.BRAND_ID
                      ,BASE_TABLE.MENU_KEY   
                      ,BASE_TABLE.MENU_NM
                ORDER BY SUM(BASE_TABLE.COST) DESC
    </select> 

    <select id="getMonthRatio1" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /* dashboardCorPerformance.getMonthRatio */
        SELECT A.SP_CSTM_ID
              ,A.BRAND_ID
              ,A.YEAR
              ,A.MONTH
              ,SUBJECT_001    AS SUBJECT1
              ,SUBJECT_003    AS SUBJECT2
              ,SUBJECT_005    AS SUBJECT3
              ,SUBJECT_010    AS SUBJECT4
              ,ROUND(SUBJECT_003 * 100/SUBJECT_001) AS SUBJECT_003
              ,ROUND(SUBJECT_005 * 100/SUBJECT_001) AS SUBJECT_005
              ,ROUND(SUBJECT_010 * 100/SUBJECT_001) AS SUBJECT_010
        FROM   (
                SELECT B.SP_CSTM_ID
                      ,B.BRAND_ID
                      ,B.YEAR
                      ,B.MONTH
                      ,SUM(DECODE(B.SUBJECT, 'SUBJECT_001', AMOUNT, 0)) AS SUBJECT_001 /*매출액*/
                      ,SUM(DECODE(B.SUBJECT, 'SUBJECT_003', AMOUNT, 0)) AS SUBJECT_003 /*매출총이익*/
                      ,SUM(DECODE(B.SUBJECT, 'SUBJECT_005', AMOUNT, 0)) AS SUBJECT_005 /*영업이익*/
                      ,SUM(DECODE(B.SUBJECT, 'SUBJECT_010', AMOUNT, 0)) AS SUBJECT_010 /*당기순이익 */  
                FROM   TBL_EXP_STORE_INFO A
                       JOIN TBL_EXP_STORE_FINANCIAL B
                           ON  1 = 1
                           AND A.SP_CSTM_ID = B.SP_CSTM_ID
                           AND A.STORE_ID   = B.STORE_ID
                WHERE  1 = 1
                AND    A.SP_CSTM_ID = #{sessionVo.spCstmId}
                AND    A.BRAND_ID   = #{brandId} 
                <if test=" !'ALL'.equals(region) and region != null and region != ''  ">
                    AND    A.REGION =  #{region} 
                </if>
                <if test=" !'ALL'.equals(store) and store != null and store != ''  ">
                    AND    A.STORE_ID = #{store} 
                </if>
                <if test=" !'ALL'.equals(supervisor) and supervisor != null and supervisor != ''  ">
                  AND    A.SUPERVISOR = #{supervisor}
                </if>
                GROUP BY  B.SP_CSTM_ID
                         ,B.BRAND_ID
                         ,B.YEAR
                         ,B.MONTH
        ) A
        WHERE 1 = 1
        AND   SUBJECT_001 != 0
        AND   TO_DATE( (A.YEAR||'-'||A.MONTH||'-01') , 'YYYY-MM-DD') BETWEEN TO_DATE('2023-01-01' , 'YYYY-MM-DD') AND TO_DATE( '2023-12-01' , 'YYYY-MM-DD')
        ORDER BY A.SP_CSTM_ID
                 ,A.BRAND_ID
                 ,A.YEAR
                 ,A.MONTH
    </select>  
    
    <select id="getMonthRatio" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /* dashboardCorPerformance.getMonthRatio */
        WITH TABLE_FINANCIAL AS (
             SELECT    A.SP_CSTM_ID
                      ,A.BRAND_ID
                      ,A.YEAR
                      ,A.MONTH
                      ,SUBJECT_001    AS SUBJECT1
                      ,SUBJECT_003    AS SUBJECT2
                      ,SUBJECT_005    AS SUBJECT3
                      ,SUBJECT_010    AS SUBJECT4
                      ,ROUND(SUBJECT_003 * 100/SUBJECT_001) AS SUBJECT_003
                      ,ROUND(SUBJECT_005 * 100/SUBJECT_001) AS SUBJECT_005
                      ,ROUND(SUBJECT_010 * 100/SUBJECT_001) AS SUBJECT_010
                FROM   (
                        SELECT B.SP_CSTM_ID
                              ,B.BRAND_ID
                              ,B.YEAR
                              ,B.MONTH
                              ,SUM(DECODE(B.SUBJECT, 'SUBJECT_001', AMOUNT, 0)) AS SUBJECT_001 /*매출액*/
                              ,SUM(DECODE(B.SUBJECT, 'SUBJECT_003', AMOUNT, 0)) AS SUBJECT_003 /*매출총이익*/
                              ,SUM(DECODE(B.SUBJECT, 'SUBJECT_005', AMOUNT, 0)) AS SUBJECT_005 /*영업이익*/
                              ,SUM(DECODE(B.SUBJECT, 'SUBJECT_010', AMOUNT, 0)) AS SUBJECT_010 /*당기순이익 */  
                        FROM   TBL_EXP_STORE_INFO A
                               JOIN TBL_EXP_STORE_FINANCIAL B
                                   ON  1 = 1
                                   AND A.SP_CSTM_ID = B.SP_CSTM_ID
                                   AND A.STORE_ID   = B.STORE_ID
                        WHERE  1 = 1
                        AND    A.SP_CSTM_ID = #{sessionVo.spCstmId}
                        AND    A.BRAND_ID   = #{brandId} 
                        <if test=" !'ALL'.equals(region) and region != null and region != ''  ">
                            AND    A.REGION =  #{region} 
                        </if>
                        <if test=" !'ALL'.equals(store) and store != null and store != ''  ">
                            AND    A.STORE_ID = #{store} 
                        </if>
                        <if test=" !'ALL'.equals(supervisor) and supervisor != null and supervisor != ''  ">
                          AND    A.SUPERVISOR = #{supervisor}
                        </if>
                        GROUP BY  B.SP_CSTM_ID
                                 ,B.BRAND_ID
                                 ,B.YEAR
                                 ,B.MONTH
                ) A
                WHERE 1 = 1
                AND   SUBJECT_001 != 0 
                AND   TO_DATE( (A.YEAR||'-'||A.MONTH||'-01') , 'YYYY-MM-DD') BETWEEN TO_DATE(#{startYMD} , 'YYYY-MM-DD') AND TO_DATE( #{endYMD} , 'YYYY-MM-DD')
                ORDER BY A.SP_CSTM_ID
                         ,A.BRAND_ID
                         ,A.YEAR
                         ,A.MONTH
        )
       ,TABLE_YEAR_MONTH  AS (
                SELECT TO_CHAR(ADD_MONTHS(TRUNC(TO_DATE(#{startYMD}, 'YYYY-MM-DD'), 'MM'), LEVEL - 1), 'YYYY-MM')               AS YEAR_MONTH
                      ,SUBSTR(TO_CHAR(ADD_MONTHS(TRUNC(TO_DATE(#{startYMD}, 'YYYY-MM-DD'), 'MM'), LEVEL - 1), 'YYYY-MM'), 0, 4) AS YEAR
                      ,SUBSTR(TO_CHAR(ADD_MONTHS(TRUNC(TO_DATE(#{startYMD}, 'YYYY-MM-DD'), 'MM'), LEVEL - 1), 'YYYY-MM'), 6, 2) AS MONTH
                FROM  (
                       SELECT TO_DATE(#{startYMD}, 'YYYY-MM-DD') AS START_DATE, 
                              TO_DATE(#{endYMD}, 'YYYY-MM-DD') AS END_DATE
                       FROM DUAL
                      ) A
                CONNECT BY LEVEL <![CDATA[<=]]>  MONTHS_BETWEEN(TRUNC(A.END_DATE, 'MM'), TRUNC(A.START_DATE, 'MM')) + 1
        )
        SELECT TABLE_YEAR_MONTH.YEAR
              ,TABLE_YEAR_MONTH.MONTH
              ,TABLE_FINANCIAL.SUBJECT1
              ,TABLE_FINANCIAL.SUBJECT2
              ,TABLE_FINANCIAL.SUBJECT3
              ,TABLE_FINANCIAL.SUBJECT4
              ,NVL(TABLE_FINANCIAL.SUBJECT_003,0) AS SUBJECT_003
              ,NVL(TABLE_FINANCIAL.SUBJECT_005,0) AS SUBJECT_005
              ,NVL(TABLE_FINANCIAL.SUBJECT_010,0) AS SUBJECT_010
        FROM   TABLE_YEAR_MONTH
               LEFT OUTER JOIN TABLE_FINANCIAL
                   ON  1 = 1
                   AND TABLE_YEAR_MONTH.YEAR = TABLE_FINANCIAL.YEAR
                   AND TABLE_YEAR_MONTH.MONTH = TABLE_FINANCIAL.MONTH
        ORDER BY TABLE_YEAR_MONTH.YEAR
               ,TABLE_YEAR_MONTH.MONTH   
    </select>
            
    <select id="getStoreRatio" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /* dashboardCorPerformance.getStoreRatio */
             SELECT    A.SP_CSTM_ID
                      ,A.BRAND_ID
                      ,A.STORE_ID
                      ,A.STORE_NM3
                      ,ROUND(SUBJECT_003 * 100/SUBJECT_001) AS SUBJECT_003
                      ,ROUND(SUBJECT_005 * 100/SUBJECT_001) AS SUBJECT_005
                      ,ROUND(SUBJECT_010 * 100/SUBJECT_001) AS SUBJECT_010
                FROM   (
                        SELECT A.SP_CSTM_ID
                              ,A.BRAND_ID
                              ,A.STORE_ID
                              ,A.STORE_NM3
                              ,SUM(DECODE(B.SUBJECT, 'SUBJECT_001', AMOUNT, 0)) AS SUBJECT_001 /*매출액*/
                              ,SUM(DECODE(B.SUBJECT, 'SUBJECT_003', AMOUNT, 0)) AS SUBJECT_003 /*매출총이익*/
                              ,SUM(DECODE(B.SUBJECT, 'SUBJECT_005', AMOUNT, 0)) AS SUBJECT_005 /*영업이익*/
                              ,SUM(DECODE(B.SUBJECT, 'SUBJECT_010', AMOUNT, 0)) AS SUBJECT_010 /*당기순이익 */  
                        FROM   TBL_EXP_STORE_INFO A
                               JOIN TBL_EXP_STORE_FINANCIAL B
                                   ON  1 = 1
                                   AND A.SP_CSTM_ID = B.SP_CSTM_ID
                                   AND A.STORE_ID   = B.STORE_ID
                        WHERE  1 = 1
                        AND    A.SP_CSTM_ID = #{sessionVo.spCstmId}
                        AND    A.BRAND_ID   = #{brandId} 
                        <if test=" !'ALL'.equals(region) and region != null and region != ''  ">
                            AND    A.REGION =  #{region} 
                        </if>
                        <if test=" !'ALL'.equals(store) and store != null and store != ''  ">
                            AND    A.STORE_ID = #{store} 
                        </if>
                        <if test=" !'ALL'.equals(supervisor) and supervisor != null and supervisor != ''  ">
                          AND    A.SUPERVISOR = #{supervisor}
                        </if>
                        AND   TO_DATE( (B.YEAR||'-'||B.MONTH||'-01') , 'YYYY-MM-DD') BETWEEN TO_DATE(#{startYMD} , 'YYYY-MM-DD') AND TO_DATE( #{endYMD} , 'YYYY-MM-DD')
                        GROUP BY  A.SP_CSTM_ID
                                 ,A.BRAND_ID
                                 ,A.STORE_ID
                                 ,A.STORE_NM3
                        ORDER BY  A.SP_CSTM_ID
                                 ,A.BRAND_ID
                                 ,A.STORE_ID
                                 ,A.STORE_NM3
                ) A
                WHERE 1 = 1
                AND   SUBJECT_001 != 0 
                ORDER BY  A.SP_CSTM_ID
                         ,A.BRAND_ID
                         ,A.STORE_NM3
    </select>  
    <select id="getBrand" resultType="java.util.HashMap" flushCache="true"  useCache="false">
        /* dashboardCorPerformance.getBrand */
        SELECT BRAND_ID  AS CODE_ID
              ,BRAND_NM  AS CODE_NM
              ,BRAND_ID
              ,BRAND_NM
              ,BUYER_ID
              ,UPDATE_USER
              ,UPDATE_DATE
              ,SP_CSTM_ID
        FROM   TBL_EXP_BUYER_BRAND
        WHERE  1 = 1
        AND    SP_CSTM_ID = #{sessionVo.spCstmId}
        <if test=" buyerId != null and buyerId != ''  ">
            AND    BUYER_ID = #{buyerId} 
        </if> 
    </select> 
</mapper>
