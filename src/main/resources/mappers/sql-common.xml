<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="common">

	<cache />

	<!--
	공통 코드  
	 -->	
	 
	<update id="allowParallel" parameterType="map">
		ALTER SESSION DISABLE PARALLEL DML
	</update>
	 
	<select id="getCommonCodeList" resultType="java.util.HashMap" flushCache="true"  useCache="false">
		/*	common.getCommonCodeList
			공통코드 리스트 조회 
		*/
		SELECT
		     A.GRP_CODE_ID
		    ,A.GRP_CODE_NM
		    ,A.USE_YN
		    ,A.DEL_YN
		    ,A.SORT_ORDER
		    ,A.UPDATE_USER
		    ,A.UPDATE_DATE
		    ,B.CODE_ID
		    ,B.CODE_NM
		    ,B.CODE_DESC
		FROM
		     TBL_EXP_GRPCODE    A
		    ,TBL_EXP_CODE       B
		WHERE 
		    	A.GRP_CODE_ID = B.GRP_CODE_ID
		    AND	A.USE_YN = 'Y'
		    AND B.USE_YN = 'Y'
		ORDER BY A.SORT_ORDER, B.SORT_ORDER    
   	</select>
   	
	<select id="getExcelUploadColumnList" resultType="java.util.HashMap" flushCache="true"  useCache="false">
		/*	common.getExcelUploadColumnList
			엑셀 업로드 Table Column 조회 
		*/
		SELECT
		     TABLE_NAME
		    ,COLUMN_LIST
		    ,TBL_CMMT
		FROM
		     TBL_EXP_EXUPTBL
		WHERE
			TABLE_NAME = #{TABLE_NAME}
   	</select>
   	
   	
   	
	<select id="excelUploadToTable" resultType="java.util.HashMap" flushCache="true"  useCache="false">
		/*	common.excelUploadToTable
			공통 Table Upload
		*/
		INSERT INTO ${tableName} (
	    <foreach item="setInfo" collection="setInfoList" separator=",">
   			 ${setInfo.header}
   		</foreach>
   			,UPDATE_DATE
   			,UPDATE_USER
    		,SP_CSTM_ID
		) VALUES (
	    <foreach item="setInfo" collection="setInfoList" separator=",">
			<if test='setInfo.columnType.equals("D") '>
			TO_DATE(#{setInfo.data}, 'YYYY-MM-DD HH24:MI:SS')
			</if>
			<if test='!setInfo.columnType.equals("D")'>
			#{setInfo.data}
			</if>
   		</foreach>
   			,GET_KRDT(SYSDATE)
   			,#{sessionVo.userId}
			,#{sessionVo.spCstmId}
		)
   	</select>

	<select id="excelOverwriteToTable" resultType="java.util.HashMap" flushCache="true"  useCache="false">
		/*	common.excelOverwriteToTable
			공통 Table Merge
		*/
		MERGE INTO ${tableName} T
		USING (
			SELECT
		    <foreach item="setInfo" collection="setInfoList" separator=",">
	   			 #{setInfo.data} AS ${setInfo.header}
	   		</foreach>
			FROM DUAL
		) S
		ON (
	    <foreach item="pkey" collection="prmKeyAttr" separator=" AND ">
   			 T.${pkey} = S.${pkey}
   		</foreach>
		)
		WHEN MATCHED THEN
			UPDATE SET
		    <foreach item="setInfo" collection="setUpdateList" separator=",">
				<if test='setInfo.columnType.equals("D") '>
				T.${setInfo.header} = TO_DATE(#{setInfo.data}, 'YYYY-MM-DD HH24:MI:SS')
				</if>
				<if test='!setInfo.columnType.equals("D")'>
				T.${setInfo.header} = #{setInfo.data}
				</if>
	   		</foreach>
	   		
	   			 ,T.UPDATE_USER		 = #{sessionVo.userId}
	   			 ,T.UPDATE_DATE		 = GET_KRDT(SYSDATE) 
		WHEN NOT MATCHED THEN 
			INSERT (
		    <foreach item="setInfo" collection="setInfoList" separator=",">
	   			 ${setInfo.header}
	   		</foreach>
	   			,UPDATE_DATE
	   			,UPDATE_USER
	    		,SP_CSTM_ID
			) VALUES (
		    <foreach item="setInfo" collection="setInfoList" separator=",">
				<if test='setInfo.columnType.equals("D") '>
				TO_DATE(#{setInfo.data}, 'YYYY-MM-DD HH24:MI:SS')
				</if>
				<if test='!setInfo.columnType.equals("D")'>
				#{setInfo.data}
				</if>
	   		</foreach>
	   			,GET_KRDT(SYSDATE)
	   			,#{sessionVo.userId}
				,#{sessionVo.spCstmId}
			)
   	</select>


   	
	<select id="existTableName" resultType="java.util.HashMap" flushCache="true"  useCache="false">
		/*	common.existTableName
			백업 Table 존재 확인
		*/
		SELECT TABLE_NAME
		FROM ALL_TABLES
		WHERE TABLE_NAME = #{BK_TABLE_NAME}
   	</select>
   		
	<update id="createBackupTable" flushCache="true">
		/*	common.createBackupTable
			백업 Table 생성
		*/
		CREATE TABLE ${BK_TABLE_NAME} AS  
		SELECT 
			  A.* 
			 ,'${BACKUP_DATE}' AS BACKUP_DATE
		FROM ${TABLE_NAME} A	
   	</update>
	<update id="insertBackupTable" flushCache="true">
		/*	common.insertBackupTable
			백업 Table 에 Insert
		*/
		INSERT INTO ${BK_TABLE_NAME}  
		SELECT 
			  A.* 
			 ,#{BACKUP_DATE} 	AS BACKUP_DATE
		FROM ${TABLE_NAME} A	
   	</update>
	<update id="insertBackupLog" flushCache="true">
		/*	common.insertBackupTable
			 엑셀 업로드시 Log 남김
		*/
		INSERT INTO TBL_EXP_EXCEL_BACKUP_LOG(
		     BK_TABLE_NAME
		    ,BK_TYPE			
		    ,BACKUP_DATE		
		    ,UPDATE_USER  
		    ,UPDATE_DATE  
		) VALUES (
			 #{BK_TABLE_NAME}  
			,#{BK_TYPE}
			,#{BACKUP_DATE}
			,#{sessionVo.userId}
			,GET_KRDT(SYSDATE)
		)
   	</update>
	<update id="deleteTable" flushCache="true">
		DELETE FROM ${TABLE_NAME}  
   	</update>
   	
   	
	<!-- Paging 관련 Template -->	
	<sql id="totalWrapStart">
		SELECT count(1) TOTAL_CNT FROM (
	</sql>
	<sql id="totalWrapEnd">
		)
	</sql>
	<sql id="pagingWrapStart">
		SELECT TBL.* FROM (
			SELECT 
				 ROWNUM AS ROWIDX
				,BODY.*
			FROM (
	</sql>	
	<sql id="pagingWrapEnd">
			) BODY
		) TBL
		WHERE 
			ROWIDX <![CDATA[>=]]> ${startIdx} AND ROWIDX <![CDATA[<=]]> ${endIdx}
	</sql>	
   	

	<select id="getAlarmList" resultType="java.util.HashMap" flushCache="true"  useCache="false">
		/*	common.getAlarmList
			Alarm 리스트 조회
		*/
		SELECT
			 ALARM_ID   
			,TARGET_USER_ID    
			,CONTENT    
			,NEW_CHECK  
			,DIRECT_EXEC
			,DEL_YN     
			,TO_CHAR( UPDATE_DATE , 'YYYY-MM-DD HH24:MI:SS' ) AS UPDATE_DATE
			,UPDATE_USER
		FROM 
			TBL_EXP_ALARM
		WHERE 1=1
			AND TARGET_USER_ID = #{sessionVo.userId}
			AND DEL_YN = 'N'
		ORDER BY UPDATE_DATE DESC
   	</select>

	<select id="getAlarmListCount" resultType="java.util.HashMap" flushCache="true"  useCache="false">
		/*	common.getAlarmList
			Alarm 리스트 Count
		*/
		SELECT
			count(*) CNT
		FROM 
			TBL_EXP_ALARM
		WHERE 1=1
			AND TARGET_USER_ID	= #{sessionVo.userId}
			AND NEW_CHECK		= 'Y'
			AND DEL_YN = 'N'
   	</select>



	<update id="addAlarm">
		/*	contract.addAlarm
			공통 / 알람등록
		*/
		INSERT INTO TBL_EXP_ALARM (
			 ALARM_ID   
			,TARGET_USER_ID    
			,CONTENT    
			,NEW_CHECK  
			,DIRECT_EXEC
			,DEL_YN     
			,UPDATE_DATE
			,UPDATE_USER
			,SP_CSTM_ID 
		) VALUES (
			 #{ALARM_ID   		}
			,#{TARGET_USER_ID   }
			,#{CONTENT    		}
			,'Y'
			,'${DIRECT_EXEC		}'
			,'N'
   			,GET_KRDT(SYSDATE)
   			,#{sessionVo.userId		}
			,#{sessionVo.spCstmId	}
		)
	</update>

	<update id="deleteNewFromAlarm">
		/*	contract.deleteNewFromAlarm
			공통 / 알람 New 제거
		*/
		UPDATE TBL_EXP_ALARM 
			SET NEW_CHECK = 'N'
		WHERE 1=1
			AND TARGET_USER_ID	= #{sessionVo.userId}
			AND NEW_CHECK		= 'Y'
			AND DEL_YN 			= 'N'
   	</update>
</mapper>
