<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cstm">

	<!--
	업무 관리 
	 -->	
	<sql id="getCstmList_body">
		SELECT ROW_NUMBER() OVER( ORDER BY CASE WHEN B.UPDATE_DATE > GET_KRDT(SYSDATE)-1 THEN 0 ELSE 1 END ,B.BUYER_NM) RN
		, B.BUYER_ID
		, B.BUYER_NM
		, B.CEO_NM
		, B.TEL
		, B.ADDR
		, B.COMPANY_REGNUM
		, B.HOW_GET
		, GET_CODE_NM( 'HOW_GET', B.HOW_GET ) HOW_GET_NM 
		, CASE 
			WHEN  ( SELECT COUNT(1) 
					FROM TBL_EXP_CONTRACT I 
					WHERE I.BUYER_ID = B.BUYER_ID 
					AND I.USE_YN ='Y' AND DEL_YN='N'	) 
					<![CDATA[ > ]]> 0 
			THEN 'N'
			ELSE 'Y'
		END AS CAN_DEL
		, CASE 
			WHEN  ( 
 					SELECT COUNT(1) 
					FROM TBL_EXP_CONTRACT C 
					, TBL_EXP_CONTRACT_MEMBER CM 
					WHERE 1=1
					AND C.CONTRACT_ID 	= CM.CONTRACT_ID
					AND C.USE_YN 		= 'Y' 
					AND C.DEL_YN 		= 'N'
			        <choose>
			       	<when test='MENU_ID != null'> 
			        	<if test=" MENU_ID == 'MN_MNG_CUS'  " >
					    AND 1=1  
			        	</if>
			        	<if test=" MENU_ID != 'MN_MNG_CUS' " >
						AND CM.USER_ID 		= #{sessionVo.userId}
			        	</if>
					</when>
					</choose>		
					AND C.BUYER_ID = B.BUYER_ID 
					AND C.USE_YN ='Y' AND C.DEL_YN='N'	) 
					<![CDATA[ > ]]> 0 
			THEN 'Y'
			ELSE 'N'
		END AS CONTRACT_YN
		, GET_USER_NM( B.CREATE_USER ) AS CREATE_USER_NM
		, TO_CHAR( B.CREATE_DATE , 'YYYY-MM-DD HH24:MI') AS CREATE_DATE
		FROM TBL_EXP_BUYER B
		WHERE 1=1
		AND B.USE_YN = 'Y'
		AND B.DEL_YN = 'N'	
		AND ( 
			<if test=" parm.BUYER_ID != null and !parm.BUYER_ID.equals('') ">
				UPPER(B.BUYER_ID) like '%' || UPPER(#{parm.BUYER_ID}) || '%'
			</if>
			<if test=" parm.BUYER_NM != null and !parm.BUYER_NM.equals('') ">
				<if test=" parm.BUYER_ID != null and !parm.BUYER_ID.equals('') ">
				OR
				</if>
				UPPER(B.BUYER_NM) like '%' || UPPER(#{parm.BUYER_NM}) || '%'
			</if>
			<if test=" parm.COMPANY_REGNUM != null and !parm.COMPANY_REGNUM.equals('') ">
				<if test=" ( parm.BUYER_ID != null and !parm.BUYER_ID.equals('')  or parm.BUYER_NM != null and !parm.BUYER_NM.equals(''))">
				OR
				</if>
				UPPER(B.COMPANY_REGNUM) like '%' || UPPER(#{parm.COMPANY_REGNUM}) || '%'
			</if>
			<if test=" parm.ADDR != null and !parm.ADDR.equals('') ">
				<if test=" ( parm.BUYER_ID != null and !parm.BUYER_ID.equals('')  or parm.BUYER_NM != null and !parm.BUYER_NM.equals('') or parm.COMPANY_REGNUM != null and !parm.COMPANY_REGNUM.equals(''))">
				OR
				</if>			
				UPPER(B.ADDR) like '%' || UPPER(#{parm.ADDR}) || '%'
			</if>
 			<if test=" parm.BUYER_ID == '' and parm.BUYER_NM == '' and parm.COMPANY_REGNUM == '' and parm.ADDR == ''">
				1=1
			</if>
			<if test=" parm.TEL != null and !parm.TEL.equals('') ">
				OR UPPER(B.TEL) like '%' || UPPER(#{parm.TEL}) || '%'
			</if>
			<if test=" parm.HOW_GET != null and !parm.HOW_GET.equals('') ">
				OR  UPPER(GET_CODE_NM( 'HOW_GET', B.HOW_GET )) = UPPER(#{parm.HOW_GET})
			</if>
			<if test=" parm.CREATE_USER != null and !parm.CREATE_USER.equals('') ">
				OR  UPPER(GET_USER_NM( B.CREATE_USER )) = UPPER(#{parm.CREATE_USER})
			</if>
			
		)
		<if test=" parm.CHECK_BUYER_ID != null and !parm.CHECK_BUYER_ID.equals('') ">
			AND B.BUYER_ID = #{parm.CHECK_BUYER_ID}
		</if>
		<if test=' parm.CHECK_MEMBER != null and parm.CHECK_MEMBER =="Y" '>
			<include refid="userContectedBuyers"/>
		</if>
		
		ORDER BY 
			 DECODE(B.CREATE_USER, #{sessionVo.userId}, 1, 2)
			,CASE WHEN B.UPDATE_DATE > GET_KRDT(SYSDATE)-1 THEN 0 ELSE 1 END ,B.BUYER_NM		
	</sql>
	<sql id="userContectedBuyers">
		/* 고객을 등록 / 고객과 연계된 계약의 멤버들 */
		AND (  B.BUYER_ID IN ( SELECT DISTINCT C.BUYER_ID  
								FROM TBL_EXP_CONTRACT C
								,TBL_EXP_CONTRACT_MEMBER CM 
								WHERE 1=1
								AND C.CONTRACT_ID	= CM.CONTRACT_ID 
								AND C.USE_YN 		= 'Y' 
								AND C.DEL_YN 		= 'N'
								AND CM.RELATION_TYPE= 'EXECUTE'
								AND ( C.USER_ID = #{sessionVo.userId}
								  OR CM.USER_ID = #{sessionVo.userId}
								)
							)
				OR B.CREATE_USER =  #{sessionVo.userId}			
		)	
	</sql>
	<select id="getCstmList" resultType="java.util.HashMap" flushCache="true"  useCache="false">
		/*	cstm.getCstmList
			고객 리스트 조회 
		*/
		<include refid="getCstmList_body"/>
	</select>	
	<select id="getCstmList_totalCnt" resultType="Integer">
		/* cstm.getCstmList_totalCnt  */
		<include refid="common.totalWrapStart"/>
		<include refid="getCstmList_body"/>
		<include refid="common.totalWrapEnd"/>
	</select>
	<select id="getCstmList_paging" resultType="java.util.HashMap">
		/* cstm.getCstmList_paging  */
		<include refid="common.pagingWrapStart"/>
		<include refid="getCstmList_body"/>
		<include refid="common.pagingWrapEnd"/>
	</select>

	<select id="getCstmNo" resultType="java.util.HashMap" flushCache="true"  useCache="false">
		/*	cstm.getCstmNo
			고객 ID 생성
		*/
		SELECT  
		'star' || TO_CHAR(MAX(TO_NUMBER(REPLACE(BUYER_ID, 'star', ''))) + 1) AS BUYER_ID
		FROM TBL_EXP_BUYER 
		WHERE BUYER_ID LIKE 'star%'
	</select>	
			 	
	<update id="updateCstm" parameterType="java.util.HashMap"  flushCache="true" >
		/*	cstm.updateCstm
			고객  저장
		*/
		MERGE INTO TBL_EXP_BUYER T
		USING (
		  SELECT #{BUYER_ID}		AS BUYER_ID,
		         #{BUYER_NM}		AS BUYER_NM,
		         #{CEO_NM}			AS CEO_NM,
		         <if test=" TEL != null and !TEL.equals('') ">
		         #{TEL} 			AS TEL,
		         </if>
		         <if test=" ADDR != null and !ADDR.equals('') ">
		         #{ADDR} 			AS ADDR,
		         </if>
		         #{COMPANY_REGNUM} 	AS COMPANY_REGNUM,
		         #{HOW_GET}		 	AS HOW_GET,
		         #{sessionVo.spCstmId} AS SP_CSTM_ID,
		         'Y' 				AS USE_YN,
		         'N'	 			AS DEL_YN,
		         #{sessionVo.userId} 	AS UPDATE_USER,
		         GET_KRDT(SYSDATE)				AS UPDATE_DATE,
		         #{sessionVo.userId} 	AS CREATE_USER,
		         GET_KRDT(SYSDATE)				AS CREATE_DATE
		  FROM dual
		) S
		ON (T.BUYER_ID	= S.BUYER_ID 
		)
		WHEN MATCHED THEN
		  UPDATE SET
		    T.BUYER_NM			= S.BUYER_NM,
		    T.CEO_NM			= S.CEO_NM,
			<if test=" TEL != null and !TEL.equals('') ">
		    T.TEL 				= S.TEL,
		    </if>
		    <if test=" ADDR != null and !ADDR.equals('') ">
		    T.ADDR 				= S.ADDR,
 			</if>		    
		    T.COMPANY_REGNUM	= S.COMPANY_REGNUM,
		    T.HOW_GET			= S.HOW_GET,
		    T.SP_CSTM_ID		= S.SP_CSTM_ID,
		    T.USE_YN			= S.USE_YN,
		    T.DEL_YN			= S.DEL_YN,
		    T.UPDATE_USER		= S.UPDATE_USER,
		    T.UPDATE_DATE		= S.UPDATE_DATE
		WHEN NOT MATCHED THEN 
    		INSERT (   BUYER_ID,   BUYER_NM,   CEO_NM,<if test=" TEL != null and !TEL.equals('') ">   TEL,</if>   <if test=" ADDR != null and !ADDR.equals('') ">ADDR, </if>  COMPANY_REGNUM,   HOW_GET,   SP_CSTM_ID,   USE_YN,   DEL_YN,   UPDATE_USER,   UPDATE_DATE ,   CREATE_USER,   CREATE_DATE, BUYER_PW )
   			VALUES ( S.BUYER_ID, S.BUYER_NM, S.CEO_NM,<if test=" TEL != null and !TEL.equals('') ">   S.TEL,</if> <if test=" ADDR != null and !ADDR.equals('') ">S.ADDR,</if> S.COMPANY_REGNUM, S.HOW_GET, S.SP_CSTM_ID, S.USE_YN, S.DEL_YN, S.UPDATE_USER, S.UPDATE_DATE	, S.CREATE_USER, S.CREATE_DATE,	'1234' )
	</update>
	
	<delete id="deleteCstm" parameterType="java.util.HashMap"  flushCache="true" >
		/*	cstm.deleteCstm
			고객  삭제
		*/
		UPDATE TBL_EXP_BUYER
		SET USE_YN = 'N' 
		, DEL_YN = 'Y' 
		,UPDATE_USER = #{sessionVo.userId}
		,UPDATE_DATE = GET_KRDT(SYSDATE)
		WHERE BUYER_ID = #{BUYER_ID}  
	</delete> 

	
	<update id="updateCstmId" parameterType="java.util.HashMap"  flushCache="true" >
		/*	cstm.updateCstmId
			고객 ID 변경 시 Update
		*/
		UPDATE TBL_EXP_BUYER T
		SET T.BUYER_ID			= #{BUYER_ID},
		    T.BUYER_NM			= #{BUYER_NM},
		    T.CEO_NM			= #{CEO_NM},
		    T.TEL 				= #{TEL},
		    T.ADDR 				= #{BUYER_ID},
		    T.COMPANY_REGNUM	= #{COMPANY_REGNUM},
		    T.HOW_GET			= #{HOW_GET},
		    T.UPDATE_USER		= #{sessionVo.userId},
		    T.UPDATE_DATE		= GET_KRDT(SYSDATE)
		WHERE T.BUYER_ID		= #{OLD_BUYER_ID}
	</update>
	
	<select id="updateBuyerIdSeries" statementType="CALLABLE" parameterType="java.util.HashMap" flushCache="true">
	    <!-- cstm.updateBuyerIdSeries
	         고객 ID 변경 SERIES
	    -->
	    { CALL
		    DECLARE
		        p_BUYER_ID		VARCHAR2(30);
				p_OLD_BUYER_ID	VARCHAR2(30);
		    BEGIN
		    
		        p_BUYER_ID 		:= #{BUYER_ID};
		        p_OLD_BUYER_ID 	:= #{OLD_BUYER_ID};
		    
		        UPDATE TBL_EXP_BUYER
		        SET BUYER_ID 		= p_BUYER_ID 
				,	UPDATE_USER 	= #{sessionVo.userId}
				,	UPDATE_DATE 	= GET_KRDT(SYSDATE)
		        WHERE BUYER_ID		= p_OLD_BUYER_ID
		        ;
		        
		        UPDATE TBL_EXP_CONTRACT
		        SET BUYER_ID 		= p_BUYER_ID
		        WHERE BUYER_ID 		= p_OLD_BUYER_ID
		        ;
		        
		    END
	    }
	</select>	
	
</mapper>
